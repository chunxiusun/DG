# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import db_pb2 as db__pb2


class DatabaseServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ExecuteSql = channel.unary_unary(
        '/models.DatabaseService/ExecuteSql',
        request_serializer=db__pb2.SqlRequest.SerializeToString,
        response_deserializer=db__pb2.SqlExecuteResponse.FromString,
        )
    self.QuerySql = channel.unary_unary(
        '/models.DatabaseService/QuerySql',
        request_serializer=db__pb2.SqlRequest.SerializeToString,
        response_deserializer=db__pb2.SqlQueryResponse.FromString,
        )
    self.ExecuteMeta = channel.unary_unary(
        '/models.DatabaseService/ExecuteMeta',
        request_serializer=db__pb2.MetaExecuteRequest.SerializeToString,
        response_deserializer=db__pb2.MetaExecuteResponse.FromString,
        )
    self.QueryMeta = channel.unary_unary(
        '/models.DatabaseService/QueryMeta',
        request_serializer=db__pb2.MetaQueryRequest.SerializeToString,
        response_deserializer=db__pb2.MetaQueryResponse.FromString,
        )
    self.SetCacheMeta = channel.unary_unary(
        '/models.DatabaseService/SetCacheMeta',
        request_serializer=db__pb2.SetCacheRequest.SerializeToString,
        response_deserializer=db__pb2.SetCacheResponse.FromString,
        )
    self.GetCachedFieldData = channel.unary_unary(
        '/models.DatabaseService/GetCachedFieldData',
        request_serializer=db__pb2.GetCacheRequest.SerializeToString,
        response_deserializer=db__pb2.GetCacheResponse.FromString,
        )


class DatabaseServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ExecuteSql(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QuerySql(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteMeta(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QueryMeta(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetCacheMeta(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCachedFieldData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DatabaseServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ExecuteSql': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteSql,
          request_deserializer=db__pb2.SqlRequest.FromString,
          response_serializer=db__pb2.SqlExecuteResponse.SerializeToString,
      ),
      'QuerySql': grpc.unary_unary_rpc_method_handler(
          servicer.QuerySql,
          request_deserializer=db__pb2.SqlRequest.FromString,
          response_serializer=db__pb2.SqlQueryResponse.SerializeToString,
      ),
      'ExecuteMeta': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteMeta,
          request_deserializer=db__pb2.MetaExecuteRequest.FromString,
          response_serializer=db__pb2.MetaExecuteResponse.SerializeToString,
      ),
      'QueryMeta': grpc.unary_unary_rpc_method_handler(
          servicer.QueryMeta,
          request_deserializer=db__pb2.MetaQueryRequest.FromString,
          response_serializer=db__pb2.MetaQueryResponse.SerializeToString,
      ),
      'SetCacheMeta': grpc.unary_unary_rpc_method_handler(
          servicer.SetCacheMeta,
          request_deserializer=db__pb2.SetCacheRequest.FromString,
          response_serializer=db__pb2.SetCacheResponse.SerializeToString,
      ),
      'GetCachedFieldData': grpc.unary_unary_rpc_method_handler(
          servicer.GetCachedFieldData,
          request_deserializer=db__pb2.GetCacheRequest.FromString,
          response_serializer=db__pb2.GetCacheResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'models.DatabaseService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
