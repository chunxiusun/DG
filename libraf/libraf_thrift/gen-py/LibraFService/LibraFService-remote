#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from LibraFService import LibraFService
from LibraFService.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  void Stop()')
  print('  RpcWorkMode GetWorkMode()')
  print('  void SetWorkMode(RpcWorkMode work_mode)')
  print('  void SwitchToPassiveModeWithTimer()')
  print('  bool IsBlocking()')
  print('  void SetIRCut(bool is_ir_on)')
  print('  bool GetIRCut()')
  print('  void SetDayNight(RpcDayNightTime interval)')
  print('  RpcDayNightTime GetDayNight()')
  print('  RpcMat GetRawImg(RpcSensorType sensor_type)')
  print('  RpcMat GetStreamImg()')
  print('  RpcMat GetFullSzRawImg(RpcSensorType sensor_type)')
  print('  RpcMat GetUndistortWideImg(RpcUndistortImgType undistort_type)')
  print('  RpcSensorProp GetSensorProperties(RpcSensorType sensor_type)')
  print('  void SetSensorProperties(RpcSensorType sensor_type, RpcSensorProp sensor_prop)')
  print('  void SetIrisOffset(RpcSensorType sensor_type, i32 offset)')
  print('  i32 GetIrisOffset(RpcSensorType sensor_type)')
  print('  RpcMotorProp GetMotorProperties()')
  print('  void SetMotorProperties(RpcMotorProp motor_prop)')
  print('  void SetLookAtPointOnStream(RpcPoint point)')
  print('  void MoveLookAtPointOnStream(RpcPoint point)')
  print('  void SetLookAtPoint(RpcPoint point)')
  print('  void RotateMotorSmallStep(RpcRotateType rot_type, i32 nsteps)')
  print('  void RotateMotorWithGivenStepLevel(RpcRotateType rot_type, RpcRotateStep level)')
  print('  void ResetMotor()')
  print('  void SetLayoutProperties(RpcLayoutProp layout_prop)')
  print('  RpcLayoutProp GetLayoutProperties()')
  print('  void SetSmartStreamType(RpcSmartStreamType smart_stream_type)')
  print('  RpcSmartStreamType GetSmartStreamType()')
  print('  void SetStreamProperties(RpcStreamType stream_type, RpcStreamProperties stream_prop)')
  print('  RpcStreamProperties GetStreamProperties(RpcStreamType stream_type)')
  print('  void SetTwoStreamProperties(RpcTwoStreamProperties stream_prop)')
  print('  RpcTwoStreamProperties GetTwoStreamProperties()')
  print('  void SetDetectionProperties(RpcDetectProp det_roi)')
  print('  RpcDetectProp GetDetectionProperties()')
  print('  void SetImageMasks( img_masks)')
  print('   GetImageMasks()')
  print('  void SetMaskOn(bool is_mask_on)')
  print('  bool GetMaskOn()')
  print('  void Calibrate(bool is_auto)')
  print('  void StopCali()')
  print('  bool CaliBusy()')
  print('  i32 CaliState()')
  print('  RpcRect GetAlignROI()')
  print('  void LearnBGM()')
  print('  i32 LearnBGMState()')
  print('  double GetBGMSensitivity()')
  print('  void SetBGMSensitivity(double sen)')
  print('  void SetFontProperties(RpcTextType text_type, RpcFontProperties font_prop)')
  print('  RpcFontProperties GetFontProperties(RpcTextType text_type)')
  print('  void SetOSDOthers(RpcOSDOther osd_other)')
  print('  RpcOSDOther GetOSDOthers()')
  print('  void SetTextAlign(RpcTextType text_type, RpcTextAlignType align_type)')
  print('  RpcTextAlignType GetTextAlign(RpcTextType text_type)')
  print('  void SetDrawBBS(bool is_draw_bbs_)')
  print('  bool GetDrawBBS()')
  print('  void SetDrawView(bool is_draw_view_)')
  print('  bool GetDrawView()')
  print('  void SetDrawDetGrid(bool is_draw_)')
  print('  bool GetDrawDetGrid()')
  print('  void SetDetTasks( snap_type)')
  print('   GetDetTasks()')
  print('  void SetSnapProps(RpcSnapProps snap_props)')
  print('  RpcSnapProps GetSnapProps()')
  print('  RpcSnapConnectInfo GetSnapConnectionInfo()')
  print('  string GetSnapPublicKey()')
  print('  string ResetSnapPriveteKey()')
  print('  void SetCompatible(bool compatible)')
  print('  bool GetCompatible()')
  print('  void SetImgTransProperties(RpcSnapType snap_type, RpcImgTransProperties img_trans_prop)')
  print('  RpcImgTransProperties GetImgTransProperties(RpcSnapType snap_type)')
  print('  void SetImgTransList( snap_type)')
  print('   GetImgTransList()')
  print('  void SaveParam()')
  print('  void LoadParam()')
  print('  void StartLibraF()')
  print('  void StopLibraF()')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = LibraFService.Client(protocol)
transport.open()

if cmd == 'Stop':
  if len(args) != 0:
    print('Stop requires 0 args')
    sys.exit(1)
  pp.pprint(client.Stop())

elif cmd == 'GetWorkMode':
  if len(args) != 0:
    print('GetWorkMode requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetWorkMode())

elif cmd == 'SetWorkMode':
  if len(args) != 1:
    print('SetWorkMode requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetWorkMode(eval(args[0]),))

elif cmd == 'SwitchToPassiveModeWithTimer':
  if len(args) != 0:
    print('SwitchToPassiveModeWithTimer requires 0 args')
    sys.exit(1)
  pp.pprint(client.SwitchToPassiveModeWithTimer())

elif cmd == 'IsBlocking':
  if len(args) != 0:
    print('IsBlocking requires 0 args')
    sys.exit(1)
  pp.pprint(client.IsBlocking())

elif cmd == 'SetIRCut':
  if len(args) != 1:
    print('SetIRCut requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetIRCut(eval(args[0]),))

elif cmd == 'GetIRCut':
  if len(args) != 0:
    print('GetIRCut requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetIRCut())

elif cmd == 'SetDayNight':
  if len(args) != 1:
    print('SetDayNight requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDayNight(eval(args[0]),))

elif cmd == 'GetDayNight':
  if len(args) != 0:
    print('GetDayNight requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDayNight())

elif cmd == 'GetRawImg':
  if len(args) != 1:
    print('GetRawImg requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetRawImg(eval(args[0]),))

elif cmd == 'GetStreamImg':
  if len(args) != 0:
    print('GetStreamImg requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetStreamImg())

elif cmd == 'GetFullSzRawImg':
  if len(args) != 1:
    print('GetFullSzRawImg requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetFullSzRawImg(eval(args[0]),))

elif cmd == 'GetUndistortWideImg':
  if len(args) != 1:
    print('GetUndistortWideImg requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetUndistortWideImg(eval(args[0]),))

elif cmd == 'GetSensorProperties':
  if len(args) != 1:
    print('GetSensorProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetSensorProperties(eval(args[0]),))

elif cmd == 'SetSensorProperties':
  if len(args) != 2:
    print('SetSensorProperties requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetSensorProperties(eval(args[0]),eval(args[1]),))

elif cmd == 'SetIrisOffset':
  if len(args) != 2:
    print('SetIrisOffset requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetIrisOffset(eval(args[0]),eval(args[1]),))

elif cmd == 'GetIrisOffset':
  if len(args) != 1:
    print('GetIrisOffset requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetIrisOffset(eval(args[0]),))

elif cmd == 'GetMotorProperties':
  if len(args) != 0:
    print('GetMotorProperties requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetMotorProperties())

elif cmd == 'SetMotorProperties':
  if len(args) != 1:
    print('SetMotorProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetMotorProperties(eval(args[0]),))

elif cmd == 'SetLookAtPointOnStream':
  if len(args) != 1:
    print('SetLookAtPointOnStream requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetLookAtPointOnStream(eval(args[0]),))

elif cmd == 'MoveLookAtPointOnStream':
  if len(args) != 1:
    print('MoveLookAtPointOnStream requires 1 args')
    sys.exit(1)
  pp.pprint(client.MoveLookAtPointOnStream(eval(args[0]),))

elif cmd == 'SetLookAtPoint':
  if len(args) != 1:
    print('SetLookAtPoint requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetLookAtPoint(eval(args[0]),))

elif cmd == 'RotateMotorSmallStep':
  if len(args) != 2:
    print('RotateMotorSmallStep requires 2 args')
    sys.exit(1)
  pp.pprint(client.RotateMotorSmallStep(eval(args[0]),eval(args[1]),))

elif cmd == 'RotateMotorWithGivenStepLevel':
  if len(args) != 2:
    print('RotateMotorWithGivenStepLevel requires 2 args')
    sys.exit(1)
  pp.pprint(client.RotateMotorWithGivenStepLevel(eval(args[0]),eval(args[1]),))

elif cmd == 'ResetMotor':
  if len(args) != 0:
    print('ResetMotor requires 0 args')
    sys.exit(1)
  pp.pprint(client.ResetMotor())

elif cmd == 'SetLayoutProperties':
  if len(args) != 1:
    print('SetLayoutProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetLayoutProperties(eval(args[0]),))

elif cmd == 'GetLayoutProperties':
  if len(args) != 0:
    print('GetLayoutProperties requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetLayoutProperties())

elif cmd == 'SetSmartStreamType':
  if len(args) != 1:
    print('SetSmartStreamType requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetSmartStreamType(eval(args[0]),))

elif cmd == 'GetSmartStreamType':
  if len(args) != 0:
    print('GetSmartStreamType requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetSmartStreamType())

elif cmd == 'SetStreamProperties':
  if len(args) != 2:
    print('SetStreamProperties requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetStreamProperties(eval(args[0]),eval(args[1]),))

elif cmd == 'GetStreamProperties':
  if len(args) != 1:
    print('GetStreamProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetStreamProperties(eval(args[0]),))

elif cmd == 'SetTwoStreamProperties':
  if len(args) != 1:
    print('SetTwoStreamProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetTwoStreamProperties(eval(args[0]),))

elif cmd == 'GetTwoStreamProperties':
  if len(args) != 0:
    print('GetTwoStreamProperties requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetTwoStreamProperties())

elif cmd == 'SetDetectionProperties':
  if len(args) != 1:
    print('SetDetectionProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDetectionProperties(eval(args[0]),))

elif cmd == 'GetDetectionProperties':
  if len(args) != 0:
    print('GetDetectionProperties requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDetectionProperties())

elif cmd == 'SetImageMasks':
  if len(args) != 1:
    print('SetImageMasks requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetImageMasks(eval(args[0]),))

elif cmd == 'GetImageMasks':
  if len(args) != 0:
    print('GetImageMasks requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetImageMasks())

elif cmd == 'SetMaskOn':
  if len(args) != 1:
    print('SetMaskOn requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetMaskOn(eval(args[0]),))

elif cmd == 'GetMaskOn':
  if len(args) != 0:
    print('GetMaskOn requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetMaskOn())

elif cmd == 'Calibrate':
  if len(args) != 1:
    print('Calibrate requires 1 args')
    sys.exit(1)
  pp.pprint(client.Calibrate(eval(args[0]),))

elif cmd == 'StopCali':
  if len(args) != 0:
    print('StopCali requires 0 args')
    sys.exit(1)
  pp.pprint(client.StopCali())

elif cmd == 'CaliBusy':
  if len(args) != 0:
    print('CaliBusy requires 0 args')
    sys.exit(1)
  pp.pprint(client.CaliBusy())

elif cmd == 'CaliState':
  if len(args) != 0:
    print('CaliState requires 0 args')
    sys.exit(1)
  pp.pprint(client.CaliState())

elif cmd == 'GetAlignROI':
  if len(args) != 0:
    print('GetAlignROI requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetAlignROI())

elif cmd == 'LearnBGM':
  if len(args) != 0:
    print('LearnBGM requires 0 args')
    sys.exit(1)
  pp.pprint(client.LearnBGM())

elif cmd == 'LearnBGMState':
  if len(args) != 0:
    print('LearnBGMState requires 0 args')
    sys.exit(1)
  pp.pprint(client.LearnBGMState())

elif cmd == 'GetBGMSensitivity':
  if len(args) != 0:
    print('GetBGMSensitivity requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetBGMSensitivity())

elif cmd == 'SetBGMSensitivity':
  if len(args) != 1:
    print('SetBGMSensitivity requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetBGMSensitivity(eval(args[0]),))

elif cmd == 'SetFontProperties':
  if len(args) != 2:
    print('SetFontProperties requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetFontProperties(eval(args[0]),eval(args[1]),))

elif cmd == 'GetFontProperties':
  if len(args) != 1:
    print('GetFontProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetFontProperties(eval(args[0]),))

elif cmd == 'SetOSDOthers':
  if len(args) != 1:
    print('SetOSDOthers requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetOSDOthers(eval(args[0]),))

elif cmd == 'GetOSDOthers':
  if len(args) != 0:
    print('GetOSDOthers requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetOSDOthers())

elif cmd == 'SetTextAlign':
  if len(args) != 2:
    print('SetTextAlign requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetTextAlign(eval(args[0]),eval(args[1]),))

elif cmd == 'GetTextAlign':
  if len(args) != 1:
    print('GetTextAlign requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetTextAlign(eval(args[0]),))

elif cmd == 'SetDrawBBS':
  if len(args) != 1:
    print('SetDrawBBS requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDrawBBS(eval(args[0]),))

elif cmd == 'GetDrawBBS':
  if len(args) != 0:
    print('GetDrawBBS requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDrawBBS())

elif cmd == 'SetDrawView':
  if len(args) != 1:
    print('SetDrawView requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDrawView(eval(args[0]),))

elif cmd == 'GetDrawView':
  if len(args) != 0:
    print('GetDrawView requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDrawView())

elif cmd == 'SetDrawDetGrid':
  if len(args) != 1:
    print('SetDrawDetGrid requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDrawDetGrid(eval(args[0]),))

elif cmd == 'GetDrawDetGrid':
  if len(args) != 0:
    print('GetDrawDetGrid requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDrawDetGrid())

elif cmd == 'SetDetTasks':
  if len(args) != 1:
    print('SetDetTasks requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetDetTasks(eval(args[0]),))

elif cmd == 'GetDetTasks':
  if len(args) != 0:
    print('GetDetTasks requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetDetTasks())

elif cmd == 'SetSnapProps':
  if len(args) != 1:
    print('SetSnapProps requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetSnapProps(eval(args[0]),))

elif cmd == 'GetSnapProps':
  if len(args) != 0:
    print('GetSnapProps requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetSnapProps())

elif cmd == 'GetSnapConnectionInfo':
  if len(args) != 0:
    print('GetSnapConnectionInfo requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetSnapConnectionInfo())

elif cmd == 'GetSnapPublicKey':
  if len(args) != 0:
    print('GetSnapPublicKey requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetSnapPublicKey())

elif cmd == 'ResetSnapPriveteKey':
  if len(args) != 0:
    print('ResetSnapPriveteKey requires 0 args')
    sys.exit(1)
  pp.pprint(client.ResetSnapPriveteKey())

elif cmd == 'SetCompatible':
  if len(args) != 1:
    print('SetCompatible requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetCompatible(eval(args[0]),))

elif cmd == 'GetCompatible':
  if len(args) != 0:
    print('GetCompatible requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetCompatible())

elif cmd == 'SetImgTransProperties':
  if len(args) != 2:
    print('SetImgTransProperties requires 2 args')
    sys.exit(1)
  pp.pprint(client.SetImgTransProperties(eval(args[0]),eval(args[1]),))

elif cmd == 'GetImgTransProperties':
  if len(args) != 1:
    print('GetImgTransProperties requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetImgTransProperties(eval(args[0]),))

elif cmd == 'SetImgTransList':
  if len(args) != 1:
    print('SetImgTransList requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetImgTransList(eval(args[0]),))

elif cmd == 'GetImgTransList':
  if len(args) != 0:
    print('GetImgTransList requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetImgTransList())

elif cmd == 'SaveParam':
  if len(args) != 0:
    print('SaveParam requires 0 args')
    sys.exit(1)
  pp.pprint(client.SaveParam())

elif cmd == 'LoadParam':
  if len(args) != 0:
    print('LoadParam requires 0 args')
    sys.exit(1)
  pp.pprint(client.LoadParam())

elif cmd == 'StartLibraF':
  if len(args) != 0:
    print('StartLibraF requires 0 args')
    sys.exit(1)
  pp.pprint(client.StartLibraF())

elif cmd == 'StopLibraF':
  if len(args) != 0:
    print('StopLibraF requires 0 args')
    sys.exit(1)
  pp.pprint(client.StopLibraF())

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
