# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ranker.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import localcommon_pb2 as localcommon__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ranker.proto',
  package='dg.model',
  syntax='proto3',
  serialized_pb=_b('\n\x0cranker.proto\x12\x08\x64g.model\x1a\x0c\x63ommon.proto\x1a\x11localcommon.proto\"\xd3\x01\n\x12RankRequestContext\x12\x11\n\tSessionId\x18\x01 \x01(\t\x12\x10\n\x08UserName\x18\x02 \x01(\t\x12\r\n\x05Token\x18\x03 \x01(\t\x12 \n\x04Type\x18\x04 \x01(\x0e\x32\x12.dg.model.RankType\x12\x38\n\x06Params\x18\x05 \x03(\x0b\x32(.dg.model.RankRequestContext.ParamsEntry\x1a-\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x02\n\x13RankResponseContext\x12\x11\n\tSessionId\x18\x01 \x01(\t\x12\x0e\n\x06Status\x18\x02 \x01(\t\x12\x0f\n\x07Message\x18\x03 \x01(\t\x12!\n\tRequestTs\x18\x04 \x01(\x0b\x32\x0e.dg.model.Time\x12\"\n\nResponseTs\x18\x05 \x01(\x0b\x32\x0e.dg.model.Time\x12;\n\x07\x44\x65\x62ugTs\x18\x06 \x03(\x0b\x32*.dg.model.RankResponseContext.DebugTsEntry\x1a>\n\x0c\x44\x65\x62ugTsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.dg.model.Time:\x02\x38\x01\"\x84\x01\n\x12RankFeatureRequest\x12-\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1c.dg.model.RankRequestContext\x12(\n\x07\x46\x65\x61ture\x18\x02 \x01(\x0b\x32\x17.dg.model.FeatureVector\x12\x15\n\rMaxCandidates\x18\x03 \x01(\x05\"\xb9\x01\n\x08RankItem\x12\n\n\x02Id\x18\x01 \x01(\t\x12\r\n\x05Score\x18\x02 \x01(\x02\x12\x0c\n\x04Name\x18\x03 \x01(\t\x12\x0b\n\x03URI\x18\x04 \x01(\t\x12\x0c\n\x04\x44\x61ta\x18\x05 \x01(\t\x12\x36\n\nAttributes\x18\x06 \x03(\x0b\x32\".dg.model.RankItem.AttributesEntry\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"m\n\x13RankFeatureResponse\x12.\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1d.dg.model.RankResponseContext\x12&\n\nCandidates\x18\x02 \x03(\x0b\x32\x12.dg.model.RankItem\"\xd2\x01\n\x10RankImageRequest\x12-\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1c.dg.model.RankRequestContext\x12\x1e\n\x05Image\x18\x02 \x01(\x0b\x32\x0f.dg.model.Image\x12+\n\x0fInterestedAreas\x18\x03 \x03(\x0b\x32\x12.dg.model.Cutboard\x12+\n\nCandidates\x18\x04 \x03(\x0b\x32\x17.dg.model.FeatureVector\x12\x15\n\rMaxCandidates\x18\x05 \x01(\x05\"k\n\x11RankImageResponse\x12.\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1d.dg.model.RankResponseContext\x12&\n\nCandidates\x18\x02 \x03(\x0b\x32\x12.dg.model.RankItem\"%\n\x16GetImageContentRequest\x12\x0b\n\x03URI\x18\x01 \x01(\t\"\'\n\x17GetImageContentResponse\x12\x0c\n\x04\x44\x61ta\x18\x01 \x01(\t\"\x81\x02\n\x15\x46\x65\x61tureRankingRequest\x12\r\n\x05ReqId\x18\x01 \x01(\x03\x12%\n\x04Type\x18\x02 \x01(\x0e\x32\x17.dg.model.RecognizeType\x12\x1e\n\x05Image\x18\x03 \x01(\x0b\x32\x0f.dg.model.Image\x12+\n\x0fInterestedAreas\x18\x04 \x03(\x0b\x32\x12.dg.model.Cutboard\x12)\n\rDisabledAreas\x18\x05 \x03(\x0b\x32\x12.dg.model.Cutboard\x12+\n\nCandidates\x18\x06 \x03(\x0b\x32\x17.dg.model.FeatureVector\x12\r\n\x05Limit\x18\x07 \x01(\x05\"D\n\x16\x46\x65\x61tureRankingResponse\x12\r\n\x05ReqId\x18\x01 \x01(\x03\x12\x0b\n\x03Ids\x18\x02 \x03(\x03\x12\x0e\n\x06Scores\x18\x03 \x03(\x02\"\\\n\x0eInfoAndFeature\x12 \n\x04Info\x18\x01 \x01(\x0b\x32\x12.dg.model.RankItem\x12(\n\x07\x46\x65\x61ture\x18\x02 \x01(\x0b\x32\x17.dg.model.FeatureVector\"o\n\x12\x41\x64\x64\x46\x65\x61turesRequest\x12-\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1c.dg.model.RankRequestContext\x12*\n\x08\x46\x65\x61tures\x18\x02 \x03(\x0b\x32\x18.dg.model.InfoAndFeature\"E\n\x13\x41\x64\x64\x46\x65\x61turesResponse\x12.\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1d.dg.model.RankResponseContext2\xa9\x03\n\x11SimilarityService\x12\x46\n\tRankImage\x12\x1a.dg.model.RankImageRequest\x1a\x1b.dg.model.RankImageResponse\"\x00\x12L\n\x0bRankFeature\x12\x1c.dg.model.RankFeatureRequest\x1a\x1d.dg.model.RankFeatureResponse\"\x00\x12L\n\x0b\x41\x64\x64\x46\x65\x61tures\x12\x1c.dg.model.AddFeaturesRequest\x1a\x1d.dg.model.AddFeaturesResponse\"\x00\x12X\n\x0fGetImageContent\x12 .dg.model.GetImageContentRequest\x1a!.dg.model.GetImageContentResponse\"\x00\x12V\n\x0fGetRankedVector\x12\x1f.dg.model.FeatureRankingRequest\x1a .dg.model.FeatureRankingResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,localcommon__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RANKREQUESTCONTEXT_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='dg.model.RankRequestContext.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='dg.model.RankRequestContext.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dg.model.RankRequestContext.ParamsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=226,
  serialized_end=271,
)

_RANKREQUESTCONTEXT = _descriptor.Descriptor(
  name='RankRequestContext',
  full_name='dg.model.RankRequestContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionId', full_name='dg.model.RankRequestContext.SessionId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='UserName', full_name='dg.model.RankRequestContext.UserName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Token', full_name='dg.model.RankRequestContext.Token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='dg.model.RankRequestContext.Type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Params', full_name='dg.model.RankRequestContext.Params', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RANKREQUESTCONTEXT_PARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=271,
)


_RANKRESPONSECONTEXT_DEBUGTSENTRY = _descriptor.Descriptor(
  name='DebugTsEntry',
  full_name='dg.model.RankResponseContext.DebugTsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='dg.model.RankResponseContext.DebugTsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dg.model.RankResponseContext.DebugTsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=481,
  serialized_end=543,
)

_RANKRESPONSECONTEXT = _descriptor.Descriptor(
  name='RankResponseContext',
  full_name='dg.model.RankResponseContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionId', full_name='dg.model.RankResponseContext.SessionId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Status', full_name='dg.model.RankResponseContext.Status', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Message', full_name='dg.model.RankResponseContext.Message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RequestTs', full_name='dg.model.RankResponseContext.RequestTs', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ResponseTs', full_name='dg.model.RankResponseContext.ResponseTs', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DebugTs', full_name='dg.model.RankResponseContext.DebugTs', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RANKRESPONSECONTEXT_DEBUGTSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=274,
  serialized_end=543,
)


_RANKFEATUREREQUEST = _descriptor.Descriptor(
  name='RankFeatureRequest',
  full_name='dg.model.RankFeatureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.RankFeatureRequest.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Feature', full_name='dg.model.RankFeatureRequest.Feature', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MaxCandidates', full_name='dg.model.RankFeatureRequest.MaxCandidates', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=678,
)


_RANKITEM_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='dg.model.RankItem.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='dg.model.RankItem.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dg.model.RankItem.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=817,
  serialized_end=866,
)

_RANKITEM = _descriptor.Descriptor(
  name='RankItem',
  full_name='dg.model.RankItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Id', full_name='dg.model.RankItem.Id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Score', full_name='dg.model.RankItem.Score', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Name', full_name='dg.model.RankItem.Name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='URI', full_name='dg.model.RankItem.URI', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Data', full_name='dg.model.RankItem.Data', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Attributes', full_name='dg.model.RankItem.Attributes', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RANKITEM_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=681,
  serialized_end=866,
)


_RANKFEATURERESPONSE = _descriptor.Descriptor(
  name='RankFeatureResponse',
  full_name='dg.model.RankFeatureResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.RankFeatureResponse.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Candidates', full_name='dg.model.RankFeatureResponse.Candidates', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=868,
  serialized_end=977,
)


_RANKIMAGEREQUEST = _descriptor.Descriptor(
  name='RankImageRequest',
  full_name='dg.model.RankImageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.RankImageRequest.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Image', full_name='dg.model.RankImageRequest.Image', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='InterestedAreas', full_name='dg.model.RankImageRequest.InterestedAreas', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Candidates', full_name='dg.model.RankImageRequest.Candidates', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MaxCandidates', full_name='dg.model.RankImageRequest.MaxCandidates', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=980,
  serialized_end=1190,
)


_RANKIMAGERESPONSE = _descriptor.Descriptor(
  name='RankImageResponse',
  full_name='dg.model.RankImageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.RankImageResponse.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Candidates', full_name='dg.model.RankImageResponse.Candidates', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1192,
  serialized_end=1299,
)


_GETIMAGECONTENTREQUEST = _descriptor.Descriptor(
  name='GetImageContentRequest',
  full_name='dg.model.GetImageContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='URI', full_name='dg.model.GetImageContentRequest.URI', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1301,
  serialized_end=1338,
)


_GETIMAGECONTENTRESPONSE = _descriptor.Descriptor(
  name='GetImageContentResponse',
  full_name='dg.model.GetImageContentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Data', full_name='dg.model.GetImageContentResponse.Data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1340,
  serialized_end=1379,
)


_FEATURERANKINGREQUEST = _descriptor.Descriptor(
  name='FeatureRankingRequest',
  full_name='dg.model.FeatureRankingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqId', full_name='dg.model.FeatureRankingRequest.ReqId', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='dg.model.FeatureRankingRequest.Type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Image', full_name='dg.model.FeatureRankingRequest.Image', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='InterestedAreas', full_name='dg.model.FeatureRankingRequest.InterestedAreas', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DisabledAreas', full_name='dg.model.FeatureRankingRequest.DisabledAreas', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Candidates', full_name='dg.model.FeatureRankingRequest.Candidates', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Limit', full_name='dg.model.FeatureRankingRequest.Limit', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1382,
  serialized_end=1639,
)


_FEATURERANKINGRESPONSE = _descriptor.Descriptor(
  name='FeatureRankingResponse',
  full_name='dg.model.FeatureRankingResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ReqId', full_name='dg.model.FeatureRankingResponse.ReqId', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Ids', full_name='dg.model.FeatureRankingResponse.Ids', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Scores', full_name='dg.model.FeatureRankingResponse.Scores', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1641,
  serialized_end=1709,
)


_INFOANDFEATURE = _descriptor.Descriptor(
  name='InfoAndFeature',
  full_name='dg.model.InfoAndFeature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Info', full_name='dg.model.InfoAndFeature.Info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Feature', full_name='dg.model.InfoAndFeature.Feature', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1711,
  serialized_end=1803,
)


_ADDFEATURESREQUEST = _descriptor.Descriptor(
  name='AddFeaturesRequest',
  full_name='dg.model.AddFeaturesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.AddFeaturesRequest.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Features', full_name='dg.model.AddFeaturesRequest.Features', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1805,
  serialized_end=1916,
)


_ADDFEATURESRESPONSE = _descriptor.Descriptor(
  name='AddFeaturesResponse',
  full_name='dg.model.AddFeaturesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.AddFeaturesResponse.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1918,
  serialized_end=1987,
)

_RANKREQUESTCONTEXT_PARAMSENTRY.containing_type = _RANKREQUESTCONTEXT
_RANKREQUESTCONTEXT.fields_by_name['Type'].enum_type = localcommon__pb2._RANKTYPE
_RANKREQUESTCONTEXT.fields_by_name['Params'].message_type = _RANKREQUESTCONTEXT_PARAMSENTRY
_RANKRESPONSECONTEXT_DEBUGTSENTRY.fields_by_name['value'].message_type = localcommon__pb2._TIME
_RANKRESPONSECONTEXT_DEBUGTSENTRY.containing_type = _RANKRESPONSECONTEXT
_RANKRESPONSECONTEXT.fields_by_name['RequestTs'].message_type = localcommon__pb2._TIME
_RANKRESPONSECONTEXT.fields_by_name['ResponseTs'].message_type = localcommon__pb2._TIME
_RANKRESPONSECONTEXT.fields_by_name['DebugTs'].message_type = _RANKRESPONSECONTEXT_DEBUGTSENTRY
_RANKFEATUREREQUEST.fields_by_name['Context'].message_type = _RANKREQUESTCONTEXT
_RANKFEATUREREQUEST.fields_by_name['Feature'].message_type = common__pb2._FEATUREVECTOR
_RANKITEM_ATTRIBUTESENTRY.containing_type = _RANKITEM
_RANKITEM.fields_by_name['Attributes'].message_type = _RANKITEM_ATTRIBUTESENTRY
_RANKFEATURERESPONSE.fields_by_name['Context'].message_type = _RANKRESPONSECONTEXT
_RANKFEATURERESPONSE.fields_by_name['Candidates'].message_type = _RANKITEM
_RANKIMAGEREQUEST.fields_by_name['Context'].message_type = _RANKREQUESTCONTEXT
_RANKIMAGEREQUEST.fields_by_name['Image'].message_type = common__pb2._IMAGE
_RANKIMAGEREQUEST.fields_by_name['InterestedAreas'].message_type = common__pb2._CUTBOARD
_RANKIMAGEREQUEST.fields_by_name['Candidates'].message_type = common__pb2._FEATUREVECTOR
_RANKIMAGERESPONSE.fields_by_name['Context'].message_type = _RANKRESPONSECONTEXT
_RANKIMAGERESPONSE.fields_by_name['Candidates'].message_type = _RANKITEM
_FEATURERANKINGREQUEST.fields_by_name['Type'].enum_type = localcommon__pb2._RECOGNIZETYPE
_FEATURERANKINGREQUEST.fields_by_name['Image'].message_type = common__pb2._IMAGE
_FEATURERANKINGREQUEST.fields_by_name['InterestedAreas'].message_type = common__pb2._CUTBOARD
_FEATURERANKINGREQUEST.fields_by_name['DisabledAreas'].message_type = common__pb2._CUTBOARD
_FEATURERANKINGREQUEST.fields_by_name['Candidates'].message_type = common__pb2._FEATUREVECTOR
_INFOANDFEATURE.fields_by_name['Info'].message_type = _RANKITEM
_INFOANDFEATURE.fields_by_name['Feature'].message_type = common__pb2._FEATUREVECTOR
_ADDFEATURESREQUEST.fields_by_name['Context'].message_type = _RANKREQUESTCONTEXT
_ADDFEATURESREQUEST.fields_by_name['Features'].message_type = _INFOANDFEATURE
_ADDFEATURESRESPONSE.fields_by_name['Context'].message_type = _RANKRESPONSECONTEXT
DESCRIPTOR.message_types_by_name['RankRequestContext'] = _RANKREQUESTCONTEXT
DESCRIPTOR.message_types_by_name['RankResponseContext'] = _RANKRESPONSECONTEXT
DESCRIPTOR.message_types_by_name['RankFeatureRequest'] = _RANKFEATUREREQUEST
DESCRIPTOR.message_types_by_name['RankItem'] = _RANKITEM
DESCRIPTOR.message_types_by_name['RankFeatureResponse'] = _RANKFEATURERESPONSE
DESCRIPTOR.message_types_by_name['RankImageRequest'] = _RANKIMAGEREQUEST
DESCRIPTOR.message_types_by_name['RankImageResponse'] = _RANKIMAGERESPONSE
DESCRIPTOR.message_types_by_name['GetImageContentRequest'] = _GETIMAGECONTENTREQUEST
DESCRIPTOR.message_types_by_name['GetImageContentResponse'] = _GETIMAGECONTENTRESPONSE
DESCRIPTOR.message_types_by_name['FeatureRankingRequest'] = _FEATURERANKINGREQUEST
DESCRIPTOR.message_types_by_name['FeatureRankingResponse'] = _FEATURERANKINGRESPONSE
DESCRIPTOR.message_types_by_name['InfoAndFeature'] = _INFOANDFEATURE
DESCRIPTOR.message_types_by_name['AddFeaturesRequest'] = _ADDFEATURESREQUEST
DESCRIPTOR.message_types_by_name['AddFeaturesResponse'] = _ADDFEATURESRESPONSE

RankRequestContext = _reflection.GeneratedProtocolMessageType('RankRequestContext', (_message.Message,), dict(

  ParamsEntry = _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _RANKREQUESTCONTEXT_PARAMSENTRY,
    __module__ = 'ranker_pb2'
    # @@protoc_insertion_point(class_scope:dg.model.RankRequestContext.ParamsEntry)
    ))
  ,
  DESCRIPTOR = _RANKREQUESTCONTEXT,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankRequestContext)
  ))
_sym_db.RegisterMessage(RankRequestContext)
_sym_db.RegisterMessage(RankRequestContext.ParamsEntry)

RankResponseContext = _reflection.GeneratedProtocolMessageType('RankResponseContext', (_message.Message,), dict(

  DebugTsEntry = _reflection.GeneratedProtocolMessageType('DebugTsEntry', (_message.Message,), dict(
    DESCRIPTOR = _RANKRESPONSECONTEXT_DEBUGTSENTRY,
    __module__ = 'ranker_pb2'
    # @@protoc_insertion_point(class_scope:dg.model.RankResponseContext.DebugTsEntry)
    ))
  ,
  DESCRIPTOR = _RANKRESPONSECONTEXT,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankResponseContext)
  ))
_sym_db.RegisterMessage(RankResponseContext)
_sym_db.RegisterMessage(RankResponseContext.DebugTsEntry)

RankFeatureRequest = _reflection.GeneratedProtocolMessageType('RankFeatureRequest', (_message.Message,), dict(
  DESCRIPTOR = _RANKFEATUREREQUEST,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankFeatureRequest)
  ))
_sym_db.RegisterMessage(RankFeatureRequest)

RankItem = _reflection.GeneratedProtocolMessageType('RankItem', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _RANKITEM_ATTRIBUTESENTRY,
    __module__ = 'ranker_pb2'
    # @@protoc_insertion_point(class_scope:dg.model.RankItem.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _RANKITEM,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankItem)
  ))
_sym_db.RegisterMessage(RankItem)
_sym_db.RegisterMessage(RankItem.AttributesEntry)

RankFeatureResponse = _reflection.GeneratedProtocolMessageType('RankFeatureResponse', (_message.Message,), dict(
  DESCRIPTOR = _RANKFEATURERESPONSE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankFeatureResponse)
  ))
_sym_db.RegisterMessage(RankFeatureResponse)

RankImageRequest = _reflection.GeneratedProtocolMessageType('RankImageRequest', (_message.Message,), dict(
  DESCRIPTOR = _RANKIMAGEREQUEST,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankImageRequest)
  ))
_sym_db.RegisterMessage(RankImageRequest)

RankImageResponse = _reflection.GeneratedProtocolMessageType('RankImageResponse', (_message.Message,), dict(
  DESCRIPTOR = _RANKIMAGERESPONSE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankImageResponse)
  ))
_sym_db.RegisterMessage(RankImageResponse)

GetImageContentRequest = _reflection.GeneratedProtocolMessageType('GetImageContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETIMAGECONTENTREQUEST,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.GetImageContentRequest)
  ))
_sym_db.RegisterMessage(GetImageContentRequest)

GetImageContentResponse = _reflection.GeneratedProtocolMessageType('GetImageContentResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETIMAGECONTENTRESPONSE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.GetImageContentResponse)
  ))
_sym_db.RegisterMessage(GetImageContentResponse)

FeatureRankingRequest = _reflection.GeneratedProtocolMessageType('FeatureRankingRequest', (_message.Message,), dict(
  DESCRIPTOR = _FEATURERANKINGREQUEST,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.FeatureRankingRequest)
  ))
_sym_db.RegisterMessage(FeatureRankingRequest)

FeatureRankingResponse = _reflection.GeneratedProtocolMessageType('FeatureRankingResponse', (_message.Message,), dict(
  DESCRIPTOR = _FEATURERANKINGRESPONSE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.FeatureRankingResponse)
  ))
_sym_db.RegisterMessage(FeatureRankingResponse)

InfoAndFeature = _reflection.GeneratedProtocolMessageType('InfoAndFeature', (_message.Message,), dict(
  DESCRIPTOR = _INFOANDFEATURE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.InfoAndFeature)
  ))
_sym_db.RegisterMessage(InfoAndFeature)

AddFeaturesRequest = _reflection.GeneratedProtocolMessageType('AddFeaturesRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDFEATURESREQUEST,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.AddFeaturesRequest)
  ))
_sym_db.RegisterMessage(AddFeaturesRequest)

AddFeaturesResponse = _reflection.GeneratedProtocolMessageType('AddFeaturesResponse', (_message.Message,), dict(
  DESCRIPTOR = _ADDFEATURESRESPONSE,
  __module__ = 'ranker_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.AddFeaturesResponse)
  ))
_sym_db.RegisterMessage(AddFeaturesResponse)


_RANKREQUESTCONTEXT_PARAMSENTRY.has_options = True
_RANKREQUESTCONTEXT_PARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RANKRESPONSECONTEXT_DEBUGTSENTRY.has_options = True
_RANKRESPONSECONTEXT_DEBUGTSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RANKITEM_ATTRIBUTESENTRY.has_options = True
_RANKITEM_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SimilarityServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RankImage = channel.unary_unary(
        '/dg.model.SimilarityService/RankImage',
        request_serializer=RankImageRequest.SerializeToString,
        response_deserializer=RankImageResponse.FromString,
        )
    self.RankFeature = channel.unary_unary(
        '/dg.model.SimilarityService/RankFeature',
        request_serializer=RankFeatureRequest.SerializeToString,
        response_deserializer=RankFeatureResponse.FromString,
        )
    self.AddFeatures = channel.unary_unary(
        '/dg.model.SimilarityService/AddFeatures',
        request_serializer=AddFeaturesRequest.SerializeToString,
        response_deserializer=AddFeaturesResponse.FromString,
        )
    self.GetImageContent = channel.unary_unary(
        '/dg.model.SimilarityService/GetImageContent',
        request_serializer=GetImageContentRequest.SerializeToString,
        response_deserializer=GetImageContentResponse.FromString,
        )
    self.GetRankedVector = channel.unary_unary(
        '/dg.model.SimilarityService/GetRankedVector',
        request_serializer=FeatureRankingRequest.SerializeToString,
        response_deserializer=FeatureRankingResponse.FromString,
        )


class SimilarityServiceServicer(object):

  def RankImage(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RankFeature(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddFeatures(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetImageContent(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRankedVector(self, request, context):
    """Deprecated
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimilarityServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RankImage': grpc.unary_unary_rpc_method_handler(
          servicer.RankImage,
          request_deserializer=RankImageRequest.FromString,
          response_serializer=RankImageResponse.SerializeToString,
      ),
      'RankFeature': grpc.unary_unary_rpc_method_handler(
          servicer.RankFeature,
          request_deserializer=RankFeatureRequest.FromString,
          response_serializer=RankFeatureResponse.SerializeToString,
      ),
      'AddFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.AddFeatures,
          request_deserializer=AddFeaturesRequest.FromString,
          response_serializer=AddFeaturesResponse.SerializeToString,
      ),
      'GetImageContent': grpc.unary_unary_rpc_method_handler(
          servicer.GetImageContent,
          request_deserializer=GetImageContentRequest.FromString,
          response_serializer=GetImageContentResponse.SerializeToString,
      ),
      'GetRankedVector': grpc.unary_unary_rpc_method_handler(
          servicer.GetRankedVector,
          request_deserializer=FeatureRankingRequest.FromString,
          response_serializer=FeatureRankingResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dg.model.SimilarityService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSimilarityServiceServicer(object):
  def RankImage(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RankFeature(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def AddFeatures(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetImageContent(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetRankedVector(self, request, context):
    """Deprecated
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSimilarityServiceStub(object):
  def RankImage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RankImage.future = None
  def RankFeature(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RankFeature.future = None
  def AddFeatures(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  AddFeatures.future = None
  def GetImageContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetImageContent.future = None
  def GetRankedVector(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Deprecated
    """
    raise NotImplementedError()
  GetRankedVector.future = None


def beta_create_SimilarityService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('dg.model.SimilarityService', 'AddFeatures'): AddFeaturesRequest.FromString,
    ('dg.model.SimilarityService', 'GetImageContent'): GetImageContentRequest.FromString,
    ('dg.model.SimilarityService', 'GetRankedVector'): FeatureRankingRequest.FromString,
    ('dg.model.SimilarityService', 'RankFeature'): RankFeatureRequest.FromString,
    ('dg.model.SimilarityService', 'RankImage'): RankImageRequest.FromString,
  }
  response_serializers = {
    ('dg.model.SimilarityService', 'AddFeatures'): AddFeaturesResponse.SerializeToString,
    ('dg.model.SimilarityService', 'GetImageContent'): GetImageContentResponse.SerializeToString,
    ('dg.model.SimilarityService', 'GetRankedVector'): FeatureRankingResponse.SerializeToString,
    ('dg.model.SimilarityService', 'RankFeature'): RankFeatureResponse.SerializeToString,
    ('dg.model.SimilarityService', 'RankImage'): RankImageResponse.SerializeToString,
  }
  method_implementations = {
    ('dg.model.SimilarityService', 'AddFeatures'): face_utilities.unary_unary_inline(servicer.AddFeatures),
    ('dg.model.SimilarityService', 'GetImageContent'): face_utilities.unary_unary_inline(servicer.GetImageContent),
    ('dg.model.SimilarityService', 'GetRankedVector'): face_utilities.unary_unary_inline(servicer.GetRankedVector),
    ('dg.model.SimilarityService', 'RankFeature'): face_utilities.unary_unary_inline(servicer.RankFeature),
    ('dg.model.SimilarityService', 'RankImage'): face_utilities.unary_unary_inline(servicer.RankImage),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SimilarityService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('dg.model.SimilarityService', 'AddFeatures'): AddFeaturesRequest.SerializeToString,
    ('dg.model.SimilarityService', 'GetImageContent'): GetImageContentRequest.SerializeToString,
    ('dg.model.SimilarityService', 'GetRankedVector'): FeatureRankingRequest.SerializeToString,
    ('dg.model.SimilarityService', 'RankFeature'): RankFeatureRequest.SerializeToString,
    ('dg.model.SimilarityService', 'RankImage'): RankImageRequest.SerializeToString,
  }
  response_deserializers = {
    ('dg.model.SimilarityService', 'AddFeatures'): AddFeaturesResponse.FromString,
    ('dg.model.SimilarityService', 'GetImageContent'): GetImageContentResponse.FromString,
    ('dg.model.SimilarityService', 'GetRankedVector'): FeatureRankingResponse.FromString,
    ('dg.model.SimilarityService', 'RankFeature'): RankFeatureResponse.FromString,
    ('dg.model.SimilarityService', 'RankImage'): RankImageResponse.FromString,
  }
  cardinalities = {
    'AddFeatures': cardinality.Cardinality.UNARY_UNARY,
    'GetImageContent': cardinality.Cardinality.UNARY_UNARY,
    'GetRankedVector': cardinality.Cardinality.UNARY_UNARY,
    'RankFeature': cardinality.Cardinality.UNARY_UNARY,
    'RankImage': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'dg.model.SimilarityService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
