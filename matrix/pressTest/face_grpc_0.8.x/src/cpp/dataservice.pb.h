// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataservice.proto

#ifndef PROTOBUF_dataservice_2eproto__INCLUDED
#define PROTOBUF_dataservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "deepdatasingle.pb.h"
// @@protoc_insertion_point(includes)

namespace model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_dataservice_2eproto();
void protobuf_AssignDesc_dataservice_2eproto();
void protobuf_ShutdownFile_dataservice_2eproto();

class BatchDataRequest;
class DataRequest;
class DataResponse;
class GenericObj;
class GenericObjs;
class GenericQuery;
class HttpResp;
class InsertResp;
class SearchRequest;

enum ApiStatus {
  UNKNOWNSTATUS = 0,
  SUCCESS = 1,
  ERROR = 2,
  ApiStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ApiStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ApiStatus_IsValid(int value);
const ApiStatus ApiStatus_MIN = UNKNOWNSTATUS;
const ApiStatus ApiStatus_MAX = ERROR;
const int ApiStatus_ARRAYSIZE = ApiStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ApiStatus_descriptor();
inline const ::std::string& ApiStatus_Name(ApiStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ApiStatus_descriptor(), value);
}
inline bool ApiStatus_Parse(
    const ::std::string& name, ApiStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ApiStatus>(
    ApiStatus_descriptor(), name, value);
}
// ===================================================================

class DataRequest : public ::google::protobuf::Message {
 public:
  DataRequest();
  virtual ~DataRequest();

  DataRequest(const DataRequest& from);

  inline DataRequest& operator=(const DataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequest& default_instance();

  void Swap(DataRequest* other);

  // implements Message ----------------------------------------------

  inline DataRequest* New() const { return New(NULL); }

  DataRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataRequest& from);
  void MergeFrom(const DataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.GenericObj Entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::model::GenericObj& entity() const;
  ::model::GenericObj* mutable_entity();
  ::model::GenericObj* release_entity();
  void set_allocated_entity(::model::GenericObj* entity);

  // @@protoc_insertion_point(class_scope:model.DataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::model::GenericObj* entity_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static DataRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchDataRequest : public ::google::protobuf::Message {
 public:
  BatchDataRequest();
  virtual ~BatchDataRequest();

  BatchDataRequest(const BatchDataRequest& from);

  inline BatchDataRequest& operator=(const BatchDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDataRequest& default_instance();

  void Swap(BatchDataRequest* other);

  // implements Message ----------------------------------------------

  inline BatchDataRequest* New() const { return New(NULL); }

  BatchDataRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchDataRequest& from);
  void MergeFrom(const BatchDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BatchDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .model.GenericObj Entities = 2;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 2;
  const ::model::GenericObj& entities(int index) const;
  ::model::GenericObj* mutable_entities(int index);
  ::model::GenericObj* add_entities();
  ::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
      entities() const;

  // @@protoc_insertion_point(class_scope:model.BatchDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::model::GenericObj > entities_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static BatchDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class DataResponse : public ::google::protobuf::Message {
 public:
  DataResponse();
  virtual ~DataResponse();

  DataResponse(const DataResponse& from);

  inline DataResponse& operator=(const DataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataResponse& default_instance();

  void Swap(DataResponse* other);

  // implements Message ----------------------------------------------

  inline DataResponse* New() const { return New(NULL); }

  DataResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataResponse& from);
  void MergeFrom(const DataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.ApiStatus Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::model::ApiStatus status() const;
  void set_status(::model::ApiStatus value);

  // optional string Msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional bytes Data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:model.DataResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static DataResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchRequest : public ::google::protobuf::Message {
 public:
  SearchRequest();
  virtual ~SearchRequest();

  SearchRequest(const SearchRequest& from);

  inline SearchRequest& operator=(const SearchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchRequest& default_instance();

  void Swap(SearchRequest* other);

  // implements Message ----------------------------------------------

  inline SearchRequest* New() const { return New(NULL); }

  SearchRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchRequest& from);
  void MergeFrom(const SearchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.GenericQuery Query = 1;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::model::GenericQuery& query() const;
  ::model::GenericQuery* mutable_query();
  ::model::GenericQuery* release_query();
  void set_allocated_query(::model::GenericQuery* query);

  // @@protoc_insertion_point(class_scope:model.SearchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::model::GenericQuery* query_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static SearchRequest* default_instance_;
};
// -------------------------------------------------------------------

class GenericQuery : public ::google::protobuf::Message {
 public:
  GenericQuery();
  virtual ~GenericQuery();

  GenericQuery(const GenericQuery& from);

  inline GenericQuery& operator=(const GenericQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericQuery& default_instance();

  void Swap(GenericQuery* other);

  // implements Message ----------------------------------------------

  inline GenericQuery* New() const { return New(NULL); }

  GenericQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericQuery& from);
  void MergeFrom(const GenericQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenericQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.ObjType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::model::ObjType type() const;
  void set_type(::model::ObjType value);

  // optional .model.DataFmtType FmtType = 2;
  void clear_fmttype();
  static const int kFmtTypeFieldNumber = 2;
  ::model::DataFmtType fmttype() const;
  void set_fmttype(::model::DataFmtType value);

  // optional string StrData = 3;
  void clear_strdata();
  static const int kStrDataFieldNumber = 3;
  const ::std::string& strdata() const;
  void set_strdata(const ::std::string& value);
  void set_strdata(const char* value);
  void set_strdata(const char* value, size_t size);
  ::std::string* mutable_strdata();
  ::std::string* release_strdata();
  void set_allocated_strdata(::std::string* strdata);

  // optional bytes BinData = 4;
  void clear_bindata();
  static const int kBinDataFieldNumber = 4;
  const ::std::string& bindata() const;
  void set_bindata(const ::std::string& value);
  void set_bindata(const char* value);
  void set_bindata(const void* value, size_t size);
  ::std::string* mutable_bindata();
  ::std::string* release_bindata();
  void set_allocated_bindata(::std::string* bindata);

  // @@protoc_insertion_point(class_scope:model.GenericQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  int fmttype_;
  ::google::protobuf::internal::ArenaStringPtr strdata_;
  ::google::protobuf::internal::ArenaStringPtr bindata_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static GenericQuery* default_instance_;
};
// -------------------------------------------------------------------

class GenericObj : public ::google::protobuf::Message {
 public:
  GenericObj();
  virtual ~GenericObj();

  GenericObj(const GenericObj& from);

  inline GenericObj& operator=(const GenericObj& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericObj& default_instance();

  void Swap(GenericObj* other);

  // implements Message ----------------------------------------------

  inline GenericObj* New() const { return New(NULL); }

  GenericObj* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericObj& from);
  void MergeFrom(const GenericObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenericObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.ObjType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::model::ObjType type() const;
  void set_type(::model::ObjType value);

  // optional .model.DataFmtType FmtType = 2;
  void clear_fmttype();
  static const int kFmtTypeFieldNumber = 2;
  ::model::DataFmtType fmttype() const;
  void set_fmttype(::model::DataFmtType value);

  // optional string StrData = 3;
  void clear_strdata();
  static const int kStrDataFieldNumber = 3;
  const ::std::string& strdata() const;
  void set_strdata(const ::std::string& value);
  void set_strdata(const char* value);
  void set_strdata(const char* value, size_t size);
  ::std::string* mutable_strdata();
  ::std::string* release_strdata();
  void set_allocated_strdata(::std::string* strdata);

  // optional bytes BinData = 4;
  void clear_bindata();
  static const int kBinDataFieldNumber = 4;
  const ::std::string& bindata() const;
  void set_bindata(const ::std::string& value);
  void set_bindata(const char* value);
  void set_bindata(const void* value, size_t size);
  ::std::string* mutable_bindata();
  ::std::string* release_bindata();
  void set_allocated_bindata(::std::string* bindata);

  // @@protoc_insertion_point(class_scope:model.GenericObj)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  int fmttype_;
  ::google::protobuf::internal::ArenaStringPtr strdata_;
  ::google::protobuf::internal::ArenaStringPtr bindata_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static GenericObj* default_instance_;
};
// -------------------------------------------------------------------

class HttpResp : public ::google::protobuf::Message {
 public:
  HttpResp();
  virtual ~HttpResp();

  HttpResp(const HttpResp& from);

  inline HttpResp& operator=(const HttpResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpResp& default_instance();

  void Swap(HttpResp* other);

  // implements Message ----------------------------------------------

  inline HttpResp* New() const { return New(NULL); }

  HttpResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpResp& from);
  void MergeFrom(const HttpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.ApiStatus Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::model::ApiStatus status() const;
  void set_status(::model::ApiStatus value);

  // optional string Msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string Data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:model.HttpResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static HttpResp* default_instance_;
};
// -------------------------------------------------------------------

class GenericObjs : public ::google::protobuf::Message {
 public:
  GenericObjs();
  virtual ~GenericObjs();

  GenericObjs(const GenericObjs& from);

  inline GenericObjs& operator=(const GenericObjs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericObjs& default_instance();

  void Swap(GenericObjs* other);

  // implements Message ----------------------------------------------

  inline GenericObjs* New() const { return New(NULL); }

  GenericObjs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericObjs& from);
  void MergeFrom(const GenericObjs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenericObjs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .model.GenericObj Objs = 1;
  int objs_size() const;
  void clear_objs();
  static const int kObjsFieldNumber = 1;
  const ::model::GenericObj& objs(int index) const;
  ::model::GenericObj* mutable_objs(int index);
  ::model::GenericObj* add_objs();
  ::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
      mutable_objs();
  const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
      objs() const;

  // @@protoc_insertion_point(class_scope:model.GenericObjs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::model::GenericObj > objs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static GenericObjs* default_instance_;
};
// -------------------------------------------------------------------

class InsertResp : public ::google::protobuf::Message {
 public:
  InsertResp();
  virtual ~InsertResp();

  InsertResp(const InsertResp& from);

  inline InsertResp& operator=(const InsertResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertResp& default_instance();

  void Swap(InsertResp* other);

  // implements Message ----------------------------------------------

  inline InsertResp* New() const { return New(NULL); }

  InsertResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertResp& from);
  void MergeFrom(const InsertResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .model.ApiStatus Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::model::ApiStatus status() const;
  void set_status(::model::ApiStatus value);

  // optional string Msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string Data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:model.InsertResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_dataservice_2eproto();
  friend void protobuf_AssignDesc_dataservice_2eproto();
  friend void protobuf_ShutdownFile_dataservice_2eproto();

  void InitAsDefaultInstance();
  static InsertResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DataRequest

// optional .model.GenericObj Entity = 1;
inline bool DataRequest::has_entity() const {
  return !_is_default_instance_ && entity_ != NULL;
}
inline void DataRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::model::GenericObj& DataRequest::entity() const {
  // @@protoc_insertion_point(field_get:model.DataRequest.Entity)
  return entity_ != NULL ? *entity_ : *default_instance_->entity_;
}
inline ::model::GenericObj* DataRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::model::GenericObj;
  }
  // @@protoc_insertion_point(field_mutable:model.DataRequest.Entity)
  return entity_;
}
inline ::model::GenericObj* DataRequest::release_entity() {
  // @@protoc_insertion_point(field_release:model.DataRequest.Entity)
  
  ::model::GenericObj* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void DataRequest::set_allocated_entity(::model::GenericObj* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:model.DataRequest.Entity)
}

// -------------------------------------------------------------------

// BatchDataRequest

// repeated .model.GenericObj Entities = 2;
inline int BatchDataRequest::entities_size() const {
  return entities_.size();
}
inline void BatchDataRequest::clear_entities() {
  entities_.Clear();
}
inline const ::model::GenericObj& BatchDataRequest::entities(int index) const {
  // @@protoc_insertion_point(field_get:model.BatchDataRequest.Entities)
  return entities_.Get(index);
}
inline ::model::GenericObj* BatchDataRequest::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:model.BatchDataRequest.Entities)
  return entities_.Mutable(index);
}
inline ::model::GenericObj* BatchDataRequest::add_entities() {
  // @@protoc_insertion_point(field_add:model.BatchDataRequest.Entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
BatchDataRequest::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:model.BatchDataRequest.Entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
BatchDataRequest::entities() const {
  // @@protoc_insertion_point(field_list:model.BatchDataRequest.Entities)
  return entities_;
}

// -------------------------------------------------------------------

// DataResponse

// optional .model.ApiStatus Status = 1;
inline void DataResponse::clear_status() {
  status_ = 0;
}
inline ::model::ApiStatus DataResponse::status() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
inline void DataResponse::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.DataResponse.Status)
}

// optional string Msg = 2;
inline void DataResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResponse::msg() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DataResponse.Msg)
}
inline void DataResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DataResponse.Msg)
}
inline void DataResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DataResponse.Msg)
}
inline ::std::string* DataResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.DataResponse.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResponse::release_msg() {
  // @@protoc_insertion_point(field_release:model.DataResponse.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.DataResponse.Msg)
}

// optional bytes Data = 3;
inline void DataResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResponse::data() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DataResponse.Data)
}
inline void DataResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DataResponse.Data)
}
inline void DataResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DataResponse.Data)
}
inline ::std::string* DataResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.DataResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResponse::release_data() {
  // @@protoc_insertion_point(field_release:model.DataResponse.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.DataResponse.Data)
}

// -------------------------------------------------------------------

// SearchRequest

// optional .model.GenericQuery Query = 1;
inline bool SearchRequest::has_query() const {
  return !_is_default_instance_ && query_ != NULL;
}
inline void SearchRequest::clear_query() {
  if (GetArenaNoVirtual() == NULL && query_ != NULL) delete query_;
  query_ = NULL;
}
inline const ::model::GenericQuery& SearchRequest::query() const {
  // @@protoc_insertion_point(field_get:model.SearchRequest.Query)
  return query_ != NULL ? *query_ : *default_instance_->query_;
}
inline ::model::GenericQuery* SearchRequest::mutable_query() {
  
  if (query_ == NULL) {
    query_ = new ::model::GenericQuery;
  }
  // @@protoc_insertion_point(field_mutable:model.SearchRequest.Query)
  return query_;
}
inline ::model::GenericQuery* SearchRequest::release_query() {
  // @@protoc_insertion_point(field_release:model.SearchRequest.Query)
  
  ::model::GenericQuery* temp = query_;
  query_ = NULL;
  return temp;
}
inline void SearchRequest::set_allocated_query(::model::GenericQuery* query) {
  delete query_;
  query_ = query;
  if (query) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:model.SearchRequest.Query)
}

// -------------------------------------------------------------------

// GenericQuery

// optional .model.ObjType Type = 1;
inline void GenericQuery::clear_type() {
  type_ = 0;
}
inline ::model::ObjType GenericQuery::type() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.Type)
  return static_cast< ::model::ObjType >(type_);
}
inline void GenericQuery::set_type(::model::ObjType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:model.GenericQuery.Type)
}

// optional .model.DataFmtType FmtType = 2;
inline void GenericQuery::clear_fmttype() {
  fmttype_ = 0;
}
inline ::model::DataFmtType GenericQuery::fmttype() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.FmtType)
  return static_cast< ::model::DataFmtType >(fmttype_);
}
inline void GenericQuery::set_fmttype(::model::DataFmtType value) {
  
  fmttype_ = value;
  // @@protoc_insertion_point(field_set:model.GenericQuery.FmtType)
}

// optional string StrData = 3;
inline void GenericQuery::clear_strdata() {
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenericQuery::strdata() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.StrData)
  return strdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericQuery::set_strdata(const ::std::string& value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericQuery.StrData)
}
inline void GenericQuery::set_strdata(const char* value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericQuery.StrData)
}
inline void GenericQuery::set_strdata(const char* value, size_t size) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericQuery.StrData)
}
inline ::std::string* GenericQuery::mutable_strdata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericQuery.StrData)
  return strdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenericQuery::release_strdata() {
  // @@protoc_insertion_point(field_release:model.GenericQuery.StrData)
  
  return strdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericQuery::set_allocated_strdata(::std::string* strdata) {
  if (strdata != NULL) {
    
  } else {
    
  }
  strdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericQuery.StrData)
}

// optional bytes BinData = 4;
inline void GenericQuery::clear_bindata() {
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenericQuery::bindata() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.BinData)
  return bindata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericQuery::set_bindata(const ::std::string& value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericQuery.BinData)
}
inline void GenericQuery::set_bindata(const char* value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericQuery.BinData)
}
inline void GenericQuery::set_bindata(const void* value, size_t size) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericQuery.BinData)
}
inline ::std::string* GenericQuery::mutable_bindata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericQuery.BinData)
  return bindata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenericQuery::release_bindata() {
  // @@protoc_insertion_point(field_release:model.GenericQuery.BinData)
  
  return bindata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericQuery::set_allocated_bindata(::std::string* bindata) {
  if (bindata != NULL) {
    
  } else {
    
  }
  bindata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericQuery.BinData)
}

// -------------------------------------------------------------------

// GenericObj

// optional .model.ObjType Type = 1;
inline void GenericObj::clear_type() {
  type_ = 0;
}
inline ::model::ObjType GenericObj::type() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.Type)
  return static_cast< ::model::ObjType >(type_);
}
inline void GenericObj::set_type(::model::ObjType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:model.GenericObj.Type)
}

// optional .model.DataFmtType FmtType = 2;
inline void GenericObj::clear_fmttype() {
  fmttype_ = 0;
}
inline ::model::DataFmtType GenericObj::fmttype() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.FmtType)
  return static_cast< ::model::DataFmtType >(fmttype_);
}
inline void GenericObj::set_fmttype(::model::DataFmtType value) {
  
  fmttype_ = value;
  // @@protoc_insertion_point(field_set:model.GenericObj.FmtType)
}

// optional string StrData = 3;
inline void GenericObj::clear_strdata() {
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenericObj::strdata() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.StrData)
  return strdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericObj::set_strdata(const ::std::string& value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericObj.StrData)
}
inline void GenericObj::set_strdata(const char* value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericObj.StrData)
}
inline void GenericObj::set_strdata(const char* value, size_t size) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericObj.StrData)
}
inline ::std::string* GenericObj::mutable_strdata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericObj.StrData)
  return strdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenericObj::release_strdata() {
  // @@protoc_insertion_point(field_release:model.GenericObj.StrData)
  
  return strdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericObj::set_allocated_strdata(::std::string* strdata) {
  if (strdata != NULL) {
    
  } else {
    
  }
  strdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericObj.StrData)
}

// optional bytes BinData = 4;
inline void GenericObj::clear_bindata() {
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenericObj::bindata() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.BinData)
  return bindata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericObj::set_bindata(const ::std::string& value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericObj.BinData)
}
inline void GenericObj::set_bindata(const char* value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericObj.BinData)
}
inline void GenericObj::set_bindata(const void* value, size_t size) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericObj.BinData)
}
inline ::std::string* GenericObj::mutable_bindata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericObj.BinData)
  return bindata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenericObj::release_bindata() {
  // @@protoc_insertion_point(field_release:model.GenericObj.BinData)
  
  return bindata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenericObj::set_allocated_bindata(::std::string* bindata) {
  if (bindata != NULL) {
    
  } else {
    
  }
  bindata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericObj.BinData)
}

// -------------------------------------------------------------------

// HttpResp

// optional .model.ApiStatus Status = 1;
inline void HttpResp::clear_status() {
  status_ = 0;
}
inline ::model::ApiStatus HttpResp::status() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
inline void HttpResp::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.HttpResp.Status)
}

// optional string Msg = 2;
inline void HttpResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpResp::msg() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.HttpResp.Msg)
}
inline void HttpResp::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.HttpResp.Msg)
}
inline void HttpResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.HttpResp.Msg)
}
inline ::std::string* HttpResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.HttpResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpResp::release_msg() {
  // @@protoc_insertion_point(field_release:model.HttpResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.HttpResp.Msg)
}

// optional string Data = 3;
inline void HttpResp::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpResp::data() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResp::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.HttpResp.Data)
}
inline void HttpResp::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.HttpResp.Data)
}
inline void HttpResp::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.HttpResp.Data)
}
inline ::std::string* HttpResp::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.HttpResp.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpResp::release_data() {
  // @@protoc_insertion_point(field_release:model.HttpResp.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResp::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.HttpResp.Data)
}

// -------------------------------------------------------------------

// GenericObjs

// repeated .model.GenericObj Objs = 1;
inline int GenericObjs::objs_size() const {
  return objs_.size();
}
inline void GenericObjs::clear_objs() {
  objs_.Clear();
}
inline const ::model::GenericObj& GenericObjs::objs(int index) const {
  // @@protoc_insertion_point(field_get:model.GenericObjs.Objs)
  return objs_.Get(index);
}
inline ::model::GenericObj* GenericObjs::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:model.GenericObjs.Objs)
  return objs_.Mutable(index);
}
inline ::model::GenericObj* GenericObjs::add_objs() {
  // @@protoc_insertion_point(field_add:model.GenericObjs.Objs)
  return objs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
GenericObjs::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:model.GenericObjs.Objs)
  return &objs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
GenericObjs::objs() const {
  // @@protoc_insertion_point(field_list:model.GenericObjs.Objs)
  return objs_;
}

// -------------------------------------------------------------------

// InsertResp

// optional .model.ApiStatus Status = 1;
inline void InsertResp::clear_status() {
  status_ = 0;
}
inline ::model::ApiStatus InsertResp::status() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
inline void InsertResp::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.InsertResp.Status)
}

// optional string Msg = 2;
inline void InsertResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertResp::msg() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.InsertResp.Msg)
}
inline void InsertResp::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.InsertResp.Msg)
}
inline void InsertResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.InsertResp.Msg)
}
inline ::std::string* InsertResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.InsertResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertResp::release_msg() {
  // @@protoc_insertion_point(field_release:model.InsertResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.InsertResp.Msg)
}

// optional string Data = 3;
inline void InsertResp::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertResp::data() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertResp::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.InsertResp.Data)
}
inline void InsertResp::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.InsertResp.Data)
}
inline void InsertResp::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.InsertResp.Data)
}
inline ::std::string* InsertResp::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.InsertResp.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertResp::release_data() {
  // @@protoc_insertion_point(field_release:model.InsertResp.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertResp::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.InsertResp.Data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::model::ApiStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::model::ApiStatus>() {
  return ::model::ApiStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dataservice_2eproto__INCLUDED
