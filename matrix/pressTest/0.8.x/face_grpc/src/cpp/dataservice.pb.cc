// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataservice.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dataservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace model {

namespace {

const ::google::protobuf::Descriptor* DataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchDataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchDataRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SearchRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SearchRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GenericQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GenericQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* GenericObj_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GenericObj_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GenericObjs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GenericObjs_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ApiStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dataservice_2eproto() {
  protobuf_AddDesc_dataservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dataservice.proto");
  GOOGLE_CHECK(file != NULL);
  DataRequest_descriptor_ = file->message_type(0);
  static const int DataRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRequest, entity_),
  };
  DataRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataRequest_descriptor_,
      DataRequest::default_instance_,
      DataRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DataRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRequest, _is_default_instance_));
  BatchDataRequest_descriptor_ = file->message_type(1);
  static const int BatchDataRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchDataRequest, entities_),
  };
  BatchDataRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchDataRequest_descriptor_,
      BatchDataRequest::default_instance_,
      BatchDataRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(BatchDataRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchDataRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchDataRequest, _is_default_instance_));
  DataResponse_descriptor_ = file->message_type(2);
  static const int DataResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResponse, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResponse, data_),
  };
  DataResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataResponse_descriptor_,
      DataResponse::default_instance_,
      DataResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(DataResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataResponse, _is_default_instance_));
  SearchRequest_descriptor_ = file->message_type(3);
  static const int SearchRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, query_),
  };
  SearchRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SearchRequest_descriptor_,
      SearchRequest::default_instance_,
      SearchRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SearchRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, _is_default_instance_));
  GenericQuery_descriptor_ = file->message_type(4);
  static const int GenericQuery_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, fmttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, strdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, bindata_),
  };
  GenericQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GenericQuery_descriptor_,
      GenericQuery::default_instance_,
      GenericQuery_offsets_,
      -1,
      -1,
      -1,
      sizeof(GenericQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericQuery, _is_default_instance_));
  GenericObj_descriptor_ = file->message_type(5);
  static const int GenericObj_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, fmttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, strdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, bindata_),
  };
  GenericObj_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GenericObj_descriptor_,
      GenericObj::default_instance_,
      GenericObj_offsets_,
      -1,
      -1,
      -1,
      sizeof(GenericObj),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObj, _is_default_instance_));
  HttpResp_descriptor_ = file->message_type(6);
  static const int HttpResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResp, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResp, data_),
  };
  HttpResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpResp_descriptor_,
      HttpResp::default_instance_,
      HttpResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(HttpResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResp, _is_default_instance_));
  GenericObjs_descriptor_ = file->message_type(7);
  static const int GenericObjs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObjs, objs_),
  };
  GenericObjs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GenericObjs_descriptor_,
      GenericObjs::default_instance_,
      GenericObjs_offsets_,
      -1,
      -1,
      -1,
      sizeof(GenericObjs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObjs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericObjs, _is_default_instance_));
  InsertResp_descriptor_ = file->message_type(8);
  static const int InsertResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertResp, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertResp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertResp, data_),
  };
  InsertResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertResp_descriptor_,
      InsertResp::default_instance_,
      InsertResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertResp, _is_default_instance_));
  ApiStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dataservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataRequest_descriptor_, &DataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchDataRequest_descriptor_, &BatchDataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataResponse_descriptor_, &DataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SearchRequest_descriptor_, &SearchRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GenericQuery_descriptor_, &GenericQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GenericObj_descriptor_, &GenericObj::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpResp_descriptor_, &HttpResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GenericObjs_descriptor_, &GenericObjs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertResp_descriptor_, &InsertResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dataservice_2eproto() {
  delete DataRequest::default_instance_;
  delete DataRequest_reflection_;
  delete BatchDataRequest::default_instance_;
  delete BatchDataRequest_reflection_;
  delete DataResponse::default_instance_;
  delete DataResponse_reflection_;
  delete SearchRequest::default_instance_;
  delete SearchRequest_reflection_;
  delete GenericQuery::default_instance_;
  delete GenericQuery_reflection_;
  delete GenericObj::default_instance_;
  delete GenericObj_reflection_;
  delete HttpResp::default_instance_;
  delete HttpResp_reflection_;
  delete GenericObjs::default_instance_;
  delete GenericObjs_reflection_;
  delete InsertResp::default_instance_;
  delete InsertResp_reflection_;
}

void protobuf_AddDesc_dataservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::model::protobuf_AddDesc_deepdatasingle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021dataservice.proto\022\005model\032\024deepdatasing"
    "le.proto\"0\n\013DataRequest\022!\n\006Entity\030\001 \001(\0132"
    "\021.model.GenericObj\"7\n\020BatchDataRequest\022#"
    "\n\010Entities\030\002 \003(\0132\021.model.GenericObj\"K\n\014D"
    "ataResponse\022 \n\006Status\030\001 \001(\0162\020.model.ApiS"
    "tatus\022\013\n\003Msg\030\002 \001(\t\022\014\n\004Data\030\003 \001(\014\"3\n\rSear"
    "chRequest\022\"\n\005Query\030\001 \001(\0132\023.model.Generic"
    "Query\"s\n\014GenericQuery\022\034\n\004Type\030\001 \001(\0162\016.mo"
    "del.ObjType\022#\n\007FmtType\030\002 \001(\0162\022.model.Dat"
    "aFmtType\022\017\n\007StrData\030\003 \001(\t\022\017\n\007BinData\030\004 \001"
    "(\014\"q\n\nGenericObj\022\034\n\004Type\030\001 \001(\0162\016.model.O"
    "bjType\022#\n\007FmtType\030\002 \001(\0162\022.model.DataFmtT"
    "ype\022\017\n\007StrData\030\003 \001(\t\022\017\n\007BinData\030\004 \001(\014\"G\n"
    "\010HttpResp\022 \n\006Status\030\001 \001(\0162\020.model.ApiSta"
    "tus\022\013\n\003Msg\030\002 \001(\t\022\014\n\004Data\030\003 \001(\t\".\n\013Generi"
    "cObjs\022\037\n\004Objs\030\001 \003(\0132\021.model.GenericObj\"I"
    "\n\nInsertResp\022 \n\006Status\030\001 \001(\0162\020.model.Api"
    "Status\022\013\n\003Msg\030\002 \001(\t\022\014\n\004Data\030\003 \001(\t*6\n\tApi"
    "Status\022\021\n\rUNKNOWNSTATUS\020\000\022\013\n\007SUCCESS\020\001\022\t"
    "\n\005ERROR\020\0022\274\001\n\013DataService\0225\n\010SendData\022\022."
    "model.DataRequest\032\023.model.DataResponse\"\000"
    "\022\?\n\rSendBatchData\022\027.model.BatchDataReque"
    "st\032\023.model.DataResponse\"\000\0225\n\006Search\022\024.mo"
    "del.SearchRequest\032\023.model.DataResponse\"\000"
    "b\006proto3", 968);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataservice.proto", &protobuf_RegisterTypes);
  DataRequest::default_instance_ = new DataRequest();
  BatchDataRequest::default_instance_ = new BatchDataRequest();
  DataResponse::default_instance_ = new DataResponse();
  SearchRequest::default_instance_ = new SearchRequest();
  GenericQuery::default_instance_ = new GenericQuery();
  GenericObj::default_instance_ = new GenericObj();
  HttpResp::default_instance_ = new HttpResp();
  GenericObjs::default_instance_ = new GenericObjs();
  InsertResp::default_instance_ = new InsertResp();
  DataRequest::default_instance_->InitAsDefaultInstance();
  BatchDataRequest::default_instance_->InitAsDefaultInstance();
  DataResponse::default_instance_->InitAsDefaultInstance();
  SearchRequest::default_instance_->InitAsDefaultInstance();
  GenericQuery::default_instance_->InitAsDefaultInstance();
  GenericObj::default_instance_->InitAsDefaultInstance();
  HttpResp::default_instance_->InitAsDefaultInstance();
  GenericObjs::default_instance_->InitAsDefaultInstance();
  InsertResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dataservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dataservice_2eproto {
  StaticDescriptorInitializer_dataservice_2eproto() {
    protobuf_AddDesc_dataservice_2eproto();
  }
} static_descriptor_initializer_dataservice_2eproto_;
const ::google::protobuf::EnumDescriptor* ApiStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApiStatus_descriptor_;
}
bool ApiStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.DataRequest)
}

void DataRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  entity_ = const_cast< ::model::GenericObj*>(&::model::GenericObj::default_instance());
}

DataRequest::DataRequest(const DataRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.DataRequest)
}

void DataRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  entity_ = NULL;
}

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:model.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {
  if (this != default_instance_) {
    delete entity_;
  }
}

void DataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataRequest_descriptor_;
}

const DataRequest& DataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

DataRequest* DataRequest::default_instance_ = NULL;

DataRequest* DataRequest::New(::google::protobuf::Arena* arena) const {
  DataRequest* n = new DataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:model.DataRequest)
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}

bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.DataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.GenericObj Entity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.DataRequest)
  return false;
#undef DO_
}

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.DataRequest)
  // optional .model.GenericObj Entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // @@protoc_insertion_point(serialize_end:model.DataRequest)
}

::google::protobuf::uint8* DataRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.DataRequest)
  // optional .model.GenericObj Entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->entity_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.DataRequest)
  return target;
}

int DataRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.DataRequest)
  int total_size = 0;

  // optional .model.GenericObj Entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.DataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DataRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.DataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_entity()) {
    mutable_entity()->::model::GenericObj::MergeFrom(from.entity());
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {

  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  std::swap(entity_, other->entity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataRequest_descriptor_;
  metadata.reflection = DataRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataRequest

// optional .model.GenericObj Entity = 1;
bool DataRequest::has_entity() const {
  return !_is_default_instance_ && entity_ != NULL;
}
void DataRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::model::GenericObj& DataRequest::entity() const {
  // @@protoc_insertion_point(field_get:model.DataRequest.Entity)
  return entity_ != NULL ? *entity_ : *default_instance_->entity_;
}
::model::GenericObj* DataRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::model::GenericObj;
  }
  // @@protoc_insertion_point(field_mutable:model.DataRequest.Entity)
  return entity_;
}
::model::GenericObj* DataRequest::release_entity() {
  // @@protoc_insertion_point(field_release:model.DataRequest.Entity)
  
  ::model::GenericObj* temp = entity_;
  entity_ = NULL;
  return temp;
}
void DataRequest::set_allocated_entity(::model::GenericObj* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:model.DataRequest.Entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchDataRequest::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchDataRequest::BatchDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.BatchDataRequest)
}

void BatchDataRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BatchDataRequest::BatchDataRequest(const BatchDataRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.BatchDataRequest)
}

void BatchDataRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

BatchDataRequest::~BatchDataRequest() {
  // @@protoc_insertion_point(destructor:model.BatchDataRequest)
  SharedDtor();
}

void BatchDataRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchDataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchDataRequest_descriptor_;
}

const BatchDataRequest& BatchDataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

BatchDataRequest* BatchDataRequest::default_instance_ = NULL;

BatchDataRequest* BatchDataRequest::New(::google::protobuf::Arena* arena) const {
  BatchDataRequest* n = new BatchDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:model.BatchDataRequest)
  entities_.Clear();
}

bool BatchDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.BatchDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .model.GenericObj Entities = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Entities;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.BatchDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.BatchDataRequest)
  return false;
#undef DO_
}

void BatchDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.BatchDataRequest)
  // repeated .model.GenericObj Entities = 2;
  for (unsigned int i = 0, n = this->entities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entities(i), output);
  }

  // @@protoc_insertion_point(serialize_end:model.BatchDataRequest)
}

::google::protobuf::uint8* BatchDataRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.BatchDataRequest)
  // repeated .model.GenericObj Entities = 2;
  for (unsigned int i = 0, n = this->entities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->entities(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.BatchDataRequest)
  return target;
}

int BatchDataRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.BatchDataRequest)
  int total_size = 0;

  // repeated .model.GenericObj Entities = 2;
  total_size += 1 * this->entities_size();
  for (int i = 0; i < this->entities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entities(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.BatchDataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BatchDataRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.BatchDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.BatchDataRequest)
    MergeFrom(*source);
  }
}

void BatchDataRequest::MergeFrom(const BatchDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.BatchDataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entities_.MergeFrom(from.entities_);
}

void BatchDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.BatchDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchDataRequest::CopyFrom(const BatchDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.BatchDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchDataRequest::IsInitialized() const {

  return true;
}

void BatchDataRequest::Swap(BatchDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchDataRequest::InternalSwap(BatchDataRequest* other) {
  entities_.UnsafeArenaSwap(&other->entities_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchDataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchDataRequest_descriptor_;
  metadata.reflection = BatchDataRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchDataRequest

// repeated .model.GenericObj Entities = 2;
int BatchDataRequest::entities_size() const {
  return entities_.size();
}
void BatchDataRequest::clear_entities() {
  entities_.Clear();
}
const ::model::GenericObj& BatchDataRequest::entities(int index) const {
  // @@protoc_insertion_point(field_get:model.BatchDataRequest.Entities)
  return entities_.Get(index);
}
::model::GenericObj* BatchDataRequest::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:model.BatchDataRequest.Entities)
  return entities_.Mutable(index);
}
::model::GenericObj* BatchDataRequest::add_entities() {
  // @@protoc_insertion_point(field_add:model.BatchDataRequest.Entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
BatchDataRequest::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:model.BatchDataRequest.Entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
BatchDataRequest::entities() const {
  // @@protoc_insertion_point(field_list:model.BatchDataRequest.Entities)
  return entities_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResponse::kStatusFieldNumber;
const int DataResponse::kMsgFieldNumber;
const int DataResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResponse::DataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.DataResponse)
}

void DataResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DataResponse::DataResponse(const DataResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.DataResponse)
}

void DataResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DataResponse::~DataResponse() {
  // @@protoc_insertion_point(destructor:model.DataResponse)
  SharedDtor();
}

void DataResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataResponse_descriptor_;
}

const DataResponse& DataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

DataResponse* DataResponse::default_instance_ = NULL;

DataResponse* DataResponse::New(::google::protobuf::Arena* arena) const {
  DataResponse* n = new DataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:model.DataResponse)
  status_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.DataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.ApiStatus Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::model::ApiStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Msg;
        break;
      }

      // optional string Msg = 2;
      case 2: {
        if (tag == 18) {
         parse_Msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.DataResponse.Msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // optional bytes Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.DataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.DataResponse)
  return false;
#undef DO_
}

void DataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.DataResponse)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.DataResponse.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional bytes Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:model.DataResponse)
}

::google::protobuf::uint8* DataResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.DataResponse)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.DataResponse.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional bytes Data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.DataResponse)
  return target;
}

int DataResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.DataResponse)
  int total_size = 0;

  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional bytes Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.DataResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DataResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.DataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.DataResponse)
    MergeFrom(*source);
  }
}

void DataResponse::MergeFrom(const DataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.DataResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void DataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResponse::CopyFrom(const DataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResponse::IsInitialized() const {

  return true;
}

void DataResponse::Swap(DataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResponse::InternalSwap(DataResponse* other) {
  std::swap(status_, other->status_);
  msg_.Swap(&other->msg_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataResponse_descriptor_;
  metadata.reflection = DataResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataResponse

// optional .model.ApiStatus Status = 1;
void DataResponse::clear_status() {
  status_ = 0;
}
 ::model::ApiStatus DataResponse::status() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
 void DataResponse::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.DataResponse.Status)
}

// optional string Msg = 2;
void DataResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DataResponse::msg() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DataResponse.Msg)
}
 void DataResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DataResponse.Msg)
}
 void DataResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DataResponse.Msg)
}
 ::std::string* DataResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.DataResponse.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataResponse::release_msg() {
  // @@protoc_insertion_point(field_release:model.DataResponse.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.DataResponse.Msg)
}

// optional bytes Data = 3;
void DataResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DataResponse::data() const {
  // @@protoc_insertion_point(field_get:model.DataResponse.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.DataResponse.Data)
}
 void DataResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.DataResponse.Data)
}
 void DataResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.DataResponse.Data)
}
 ::std::string* DataResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.DataResponse.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataResponse::release_data() {
  // @@protoc_insertion_point(field_release:model.DataResponse.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.DataResponse.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.SearchRequest)
}

void SearchRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  query_ = const_cast< ::model::GenericQuery*>(&::model::GenericQuery::default_instance());
}

SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.SearchRequest)
}

void SearchRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  query_ = NULL;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:model.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  if (this != default_instance_) {
    delete query_;
  }
}

void SearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SearchRequest_descriptor_;
}

const SearchRequest& SearchRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

SearchRequest* SearchRequest::default_instance_ = NULL;

SearchRequest* SearchRequest::New(::google::protobuf::Arena* arena) const {
  SearchRequest* n = new SearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:model.SearchRequest)
  if (GetArenaNoVirtual() == NULL && query_ != NULL) delete query_;
  query_ = NULL;
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.SearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.GenericQuery Query = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.SearchRequest)
  // optional .model.GenericQuery Query = 1;
  if (this->has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->query_, output);
  }

  // @@protoc_insertion_point(serialize_end:model.SearchRequest)
}

::google::protobuf::uint8* SearchRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.SearchRequest)
  // optional .model.GenericQuery Query = 1;
  if (this->has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->query_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.SearchRequest)
  return target;
}

int SearchRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.SearchRequest)
  int total_size = 0;

  // optional .model.GenericQuery Query = 1;
  if (this->has_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->query_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.SearchRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SearchRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.SearchRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_query()) {
    mutable_query()->::model::GenericQuery::MergeFrom(from.query());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {

  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  std::swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SearchRequest_descriptor_;
  metadata.reflection = SearchRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchRequest

// optional .model.GenericQuery Query = 1;
bool SearchRequest::has_query() const {
  return !_is_default_instance_ && query_ != NULL;
}
void SearchRequest::clear_query() {
  if (GetArenaNoVirtual() == NULL && query_ != NULL) delete query_;
  query_ = NULL;
}
const ::model::GenericQuery& SearchRequest::query() const {
  // @@protoc_insertion_point(field_get:model.SearchRequest.Query)
  return query_ != NULL ? *query_ : *default_instance_->query_;
}
::model::GenericQuery* SearchRequest::mutable_query() {
  
  if (query_ == NULL) {
    query_ = new ::model::GenericQuery;
  }
  // @@protoc_insertion_point(field_mutable:model.SearchRequest.Query)
  return query_;
}
::model::GenericQuery* SearchRequest::release_query() {
  // @@protoc_insertion_point(field_release:model.SearchRequest.Query)
  
  ::model::GenericQuery* temp = query_;
  query_ = NULL;
  return temp;
}
void SearchRequest::set_allocated_query(::model::GenericQuery* query) {
  delete query_;
  query_ = query;
  if (query) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:model.SearchRequest.Query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericQuery::kTypeFieldNumber;
const int GenericQuery::kFmtTypeFieldNumber;
const int GenericQuery::kStrDataFieldNumber;
const int GenericQuery::kBinDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericQuery::GenericQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.GenericQuery)
}

void GenericQuery::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GenericQuery::GenericQuery(const GenericQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.GenericQuery)
}

void GenericQuery::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  fmttype_ = 0;
  strdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenericQuery::~GenericQuery() {
  // @@protoc_insertion_point(destructor:model.GenericQuery)
  SharedDtor();
}

void GenericQuery::SharedDtor() {
  strdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GenericQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenericQuery_descriptor_;
}

const GenericQuery& GenericQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

GenericQuery* GenericQuery::default_instance_ = NULL;

GenericQuery* GenericQuery::New(::google::protobuf::Arena* arena) const {
  GenericQuery* n = new GenericQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:model.GenericQuery)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GenericQuery, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GenericQuery*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, fmttype_);
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GenericQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.GenericQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.ObjType Type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::model::ObjType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FmtType;
        break;
      }

      // optional .model.DataFmtType FmtType = 2;
      case 2: {
        if (tag == 16) {
         parse_FmtType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fmttype(static_cast< ::model::DataFmtType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StrData;
        break;
      }

      // optional string StrData = 3;
      case 3: {
        if (tag == 26) {
         parse_StrData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdata().data(), this->strdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.GenericQuery.StrData"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BinData;
        break;
      }

      // optional bytes BinData = 4;
      case 4: {
        if (tag == 34) {
         parse_BinData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bindata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.GenericQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.GenericQuery)
  return false;
#undef DO_
}

void GenericQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.GenericQuery)
  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fmttype(), output);
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.GenericQuery.StrData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdata(), output);
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bindata(), output);
  }

  // @@protoc_insertion_point(serialize_end:model.GenericQuery)
}

::google::protobuf::uint8* GenericQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.GenericQuery)
  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->fmttype(), target);
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.GenericQuery.StrData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdata(), target);
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bindata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.GenericQuery)
  return target;
}

int GenericQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.GenericQuery)
  int total_size = 0;

  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fmttype());
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdata());
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bindata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.GenericQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GenericQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.GenericQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.GenericQuery)
    MergeFrom(*source);
  }
}

void GenericQuery::MergeFrom(const GenericQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.GenericQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.fmttype() != 0) {
    set_fmttype(from.fmttype());
  }
  if (from.strdata().size() > 0) {

    strdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdata_);
  }
  if (from.bindata().size() > 0) {

    bindata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindata_);
  }
}

void GenericQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.GenericQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericQuery::CopyFrom(const GenericQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.GenericQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericQuery::IsInitialized() const {

  return true;
}

void GenericQuery::Swap(GenericQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericQuery::InternalSwap(GenericQuery* other) {
  std::swap(type_, other->type_);
  std::swap(fmttype_, other->fmttype_);
  strdata_.Swap(&other->strdata_);
  bindata_.Swap(&other->bindata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GenericQuery_descriptor_;
  metadata.reflection = GenericQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericQuery

// optional .model.ObjType Type = 1;
void GenericQuery::clear_type() {
  type_ = 0;
}
 ::model::ObjType GenericQuery::type() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.Type)
  return static_cast< ::model::ObjType >(type_);
}
 void GenericQuery::set_type(::model::ObjType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:model.GenericQuery.Type)
}

// optional .model.DataFmtType FmtType = 2;
void GenericQuery::clear_fmttype() {
  fmttype_ = 0;
}
 ::model::DataFmtType GenericQuery::fmttype() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.FmtType)
  return static_cast< ::model::DataFmtType >(fmttype_);
}
 void GenericQuery::set_fmttype(::model::DataFmtType value) {
  
  fmttype_ = value;
  // @@protoc_insertion_point(field_set:model.GenericQuery.FmtType)
}

// optional string StrData = 3;
void GenericQuery::clear_strdata() {
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GenericQuery::strdata() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.StrData)
  return strdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericQuery::set_strdata(const ::std::string& value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericQuery.StrData)
}
 void GenericQuery::set_strdata(const char* value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericQuery.StrData)
}
 void GenericQuery::set_strdata(const char* value, size_t size) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericQuery.StrData)
}
 ::std::string* GenericQuery::mutable_strdata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericQuery.StrData)
  return strdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericQuery::release_strdata() {
  // @@protoc_insertion_point(field_release:model.GenericQuery.StrData)
  
  return strdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericQuery::set_allocated_strdata(::std::string* strdata) {
  if (strdata != NULL) {
    
  } else {
    
  }
  strdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericQuery.StrData)
}

// optional bytes BinData = 4;
void GenericQuery::clear_bindata() {
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GenericQuery::bindata() const {
  // @@protoc_insertion_point(field_get:model.GenericQuery.BinData)
  return bindata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericQuery::set_bindata(const ::std::string& value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericQuery.BinData)
}
 void GenericQuery::set_bindata(const char* value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericQuery.BinData)
}
 void GenericQuery::set_bindata(const void* value, size_t size) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericQuery.BinData)
}
 ::std::string* GenericQuery::mutable_bindata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericQuery.BinData)
  return bindata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericQuery::release_bindata() {
  // @@protoc_insertion_point(field_release:model.GenericQuery.BinData)
  
  return bindata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericQuery::set_allocated_bindata(::std::string* bindata) {
  if (bindata != NULL) {
    
  } else {
    
  }
  bindata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericQuery.BinData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericObj::kTypeFieldNumber;
const int GenericObj::kFmtTypeFieldNumber;
const int GenericObj::kStrDataFieldNumber;
const int GenericObj::kBinDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericObj::GenericObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.GenericObj)
}

void GenericObj::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GenericObj::GenericObj(const GenericObj& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.GenericObj)
}

void GenericObj::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  fmttype_ = 0;
  strdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenericObj::~GenericObj() {
  // @@protoc_insertion_point(destructor:model.GenericObj)
  SharedDtor();
}

void GenericObj::SharedDtor() {
  strdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GenericObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericObj::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenericObj_descriptor_;
}

const GenericObj& GenericObj::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

GenericObj* GenericObj::default_instance_ = NULL;

GenericObj* GenericObj::New(::google::protobuf::Arena* arena) const {
  GenericObj* n = new GenericObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericObj::Clear() {
// @@protoc_insertion_point(message_clear_start:model.GenericObj)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GenericObj, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GenericObj*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, fmttype_);
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GenericObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.GenericObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.ObjType Type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::model::ObjType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FmtType;
        break;
      }

      // optional .model.DataFmtType FmtType = 2;
      case 2: {
        if (tag == 16) {
         parse_FmtType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fmttype(static_cast< ::model::DataFmtType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StrData;
        break;
      }

      // optional string StrData = 3;
      case 3: {
        if (tag == 26) {
         parse_StrData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdata().data(), this->strdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.GenericObj.StrData"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BinData;
        break;
      }

      // optional bytes BinData = 4;
      case 4: {
        if (tag == 34) {
         parse_BinData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bindata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.GenericObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.GenericObj)
  return false;
#undef DO_
}

void GenericObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.GenericObj)
  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fmttype(), output);
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.GenericObj.StrData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strdata(), output);
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bindata(), output);
  }

  // @@protoc_insertion_point(serialize_end:model.GenericObj)
}

::google::protobuf::uint8* GenericObj::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.GenericObj)
  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->fmttype(), target);
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.GenericObj.StrData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strdata(), target);
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bindata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.GenericObj)
  return target;
}

int GenericObj::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.GenericObj)
  int total_size = 0;

  // optional .model.ObjType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .model.DataFmtType FmtType = 2;
  if (this->fmttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fmttype());
  }

  // optional string StrData = 3;
  if (this->strdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdata());
  }

  // optional bytes BinData = 4;
  if (this->bindata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bindata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.GenericObj)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GenericObj* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.GenericObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.GenericObj)
    MergeFrom(*source);
  }
}

void GenericObj::MergeFrom(const GenericObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.GenericObj)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.fmttype() != 0) {
    set_fmttype(from.fmttype());
  }
  if (from.strdata().size() > 0) {

    strdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdata_);
  }
  if (from.bindata().size() > 0) {

    bindata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindata_);
  }
}

void GenericObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.GenericObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericObj::CopyFrom(const GenericObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.GenericObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericObj::IsInitialized() const {

  return true;
}

void GenericObj::Swap(GenericObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericObj::InternalSwap(GenericObj* other) {
  std::swap(type_, other->type_);
  std::swap(fmttype_, other->fmttype_);
  strdata_.Swap(&other->strdata_);
  bindata_.Swap(&other->bindata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericObj::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GenericObj_descriptor_;
  metadata.reflection = GenericObj_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericObj

// optional .model.ObjType Type = 1;
void GenericObj::clear_type() {
  type_ = 0;
}
 ::model::ObjType GenericObj::type() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.Type)
  return static_cast< ::model::ObjType >(type_);
}
 void GenericObj::set_type(::model::ObjType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:model.GenericObj.Type)
}

// optional .model.DataFmtType FmtType = 2;
void GenericObj::clear_fmttype() {
  fmttype_ = 0;
}
 ::model::DataFmtType GenericObj::fmttype() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.FmtType)
  return static_cast< ::model::DataFmtType >(fmttype_);
}
 void GenericObj::set_fmttype(::model::DataFmtType value) {
  
  fmttype_ = value;
  // @@protoc_insertion_point(field_set:model.GenericObj.FmtType)
}

// optional string StrData = 3;
void GenericObj::clear_strdata() {
  strdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GenericObj::strdata() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.StrData)
  return strdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericObj::set_strdata(const ::std::string& value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericObj.StrData)
}
 void GenericObj::set_strdata(const char* value) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericObj.StrData)
}
 void GenericObj::set_strdata(const char* value, size_t size) {
  
  strdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericObj.StrData)
}
 ::std::string* GenericObj::mutable_strdata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericObj.StrData)
  return strdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericObj::release_strdata() {
  // @@protoc_insertion_point(field_release:model.GenericObj.StrData)
  
  return strdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericObj::set_allocated_strdata(::std::string* strdata) {
  if (strdata != NULL) {
    
  } else {
    
  }
  strdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericObj.StrData)
}

// optional bytes BinData = 4;
void GenericObj::clear_bindata() {
  bindata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GenericObj::bindata() const {
  // @@protoc_insertion_point(field_get:model.GenericObj.BinData)
  return bindata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericObj::set_bindata(const ::std::string& value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.GenericObj.BinData)
}
 void GenericObj::set_bindata(const char* value) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.GenericObj.BinData)
}
 void GenericObj::set_bindata(const void* value, size_t size) {
  
  bindata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.GenericObj.BinData)
}
 ::std::string* GenericObj::mutable_bindata() {
  
  // @@protoc_insertion_point(field_mutable:model.GenericObj.BinData)
  return bindata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericObj::release_bindata() {
  // @@protoc_insertion_point(field_release:model.GenericObj.BinData)
  
  return bindata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GenericObj::set_allocated_bindata(::std::string* bindata) {
  if (bindata != NULL) {
    
  } else {
    
  }
  bindata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindata);
  // @@protoc_insertion_point(field_set_allocated:model.GenericObj.BinData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpResp::kStatusFieldNumber;
const int HttpResp::kMsgFieldNumber;
const int HttpResp::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpResp::HttpResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.HttpResp)
}

void HttpResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HttpResp::HttpResp(const HttpResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.HttpResp)
}

void HttpResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HttpResp::~HttpResp() {
  // @@protoc_insertion_point(destructor:model.HttpResp)
  SharedDtor();
}

void HttpResp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HttpResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpResp_descriptor_;
}

const HttpResp& HttpResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

HttpResp* HttpResp::default_instance_ = NULL;

HttpResp* HttpResp::New(::google::protobuf::Arena* arena) const {
  HttpResp* n = new HttpResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpResp::Clear() {
// @@protoc_insertion_point(message_clear_start:model.HttpResp)
  status_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HttpResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.HttpResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.ApiStatus Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::model::ApiStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Msg;
        break;
      }

      // optional string Msg = 2;
      case 2: {
        if (tag == 18) {
         parse_Msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.HttpResp.Msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // optional string Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.HttpResp.Data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.HttpResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.HttpResp)
  return false;
#undef DO_
}

void HttpResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.HttpResp)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.HttpResp.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.HttpResp.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:model.HttpResp)
}

::google::protobuf::uint8* HttpResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.HttpResp)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.HttpResp.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.HttpResp.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.HttpResp)
  return target;
}

int HttpResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.HttpResp)
  int total_size = 0;

  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.HttpResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.HttpResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.HttpResp)
    MergeFrom(*source);
  }
}

void HttpResp::MergeFrom(const HttpResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.HttpResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void HttpResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.HttpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpResp::CopyFrom(const HttpResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.HttpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpResp::IsInitialized() const {

  return true;
}

void HttpResp::Swap(HttpResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpResp::InternalSwap(HttpResp* other) {
  std::swap(status_, other->status_);
  msg_.Swap(&other->msg_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpResp_descriptor_;
  metadata.reflection = HttpResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpResp

// optional .model.ApiStatus Status = 1;
void HttpResp::clear_status() {
  status_ = 0;
}
 ::model::ApiStatus HttpResp::status() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
 void HttpResp::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.HttpResp.Status)
}

// optional string Msg = 2;
void HttpResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HttpResp::msg() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HttpResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.HttpResp.Msg)
}
 void HttpResp::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.HttpResp.Msg)
}
 void HttpResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.HttpResp.Msg)
}
 ::std::string* HttpResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.HttpResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HttpResp::release_msg() {
  // @@protoc_insertion_point(field_release:model.HttpResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HttpResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.HttpResp.Msg)
}

// optional string Data = 3;
void HttpResp::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HttpResp::data() const {
  // @@protoc_insertion_point(field_get:model.HttpResp.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HttpResp::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.HttpResp.Data)
}
 void HttpResp::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.HttpResp.Data)
}
 void HttpResp::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.HttpResp.Data)
}
 ::std::string* HttpResp::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.HttpResp.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HttpResp::release_data() {
  // @@protoc_insertion_point(field_release:model.HttpResp.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HttpResp::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.HttpResp.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericObjs::kObjsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericObjs::GenericObjs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.GenericObjs)
}

void GenericObjs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GenericObjs::GenericObjs(const GenericObjs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.GenericObjs)
}

void GenericObjs::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

GenericObjs::~GenericObjs() {
  // @@protoc_insertion_point(destructor:model.GenericObjs)
  SharedDtor();
}

void GenericObjs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GenericObjs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericObjs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenericObjs_descriptor_;
}

const GenericObjs& GenericObjs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

GenericObjs* GenericObjs::default_instance_ = NULL;

GenericObjs* GenericObjs::New(::google::protobuf::Arena* arena) const {
  GenericObjs* n = new GenericObjs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericObjs::Clear() {
// @@protoc_insertion_point(message_clear_start:model.GenericObjs)
  objs_.Clear();
}

bool GenericObjs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.GenericObjs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .model.GenericObj Objs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Objs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Objs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.GenericObjs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.GenericObjs)
  return false;
#undef DO_
}

void GenericObjs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.GenericObjs)
  // repeated .model.GenericObj Objs = 1;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:model.GenericObjs)
}

::google::protobuf::uint8* GenericObjs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.GenericObjs)
  // repeated .model.GenericObj Objs = 1;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->objs(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.GenericObjs)
  return target;
}

int GenericObjs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.GenericObjs)
  int total_size = 0;

  // repeated .model.GenericObj Objs = 1;
  total_size += 1 * this->objs_size();
  for (int i = 0; i < this->objs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericObjs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.GenericObjs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GenericObjs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericObjs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.GenericObjs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.GenericObjs)
    MergeFrom(*source);
  }
}

void GenericObjs::MergeFrom(const GenericObjs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.GenericObjs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  objs_.MergeFrom(from.objs_);
}

void GenericObjs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.GenericObjs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericObjs::CopyFrom(const GenericObjs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.GenericObjs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericObjs::IsInitialized() const {

  return true;
}

void GenericObjs::Swap(GenericObjs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericObjs::InternalSwap(GenericObjs* other) {
  objs_.UnsafeArenaSwap(&other->objs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericObjs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GenericObjs_descriptor_;
  metadata.reflection = GenericObjs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericObjs

// repeated .model.GenericObj Objs = 1;
int GenericObjs::objs_size() const {
  return objs_.size();
}
void GenericObjs::clear_objs() {
  objs_.Clear();
}
const ::model::GenericObj& GenericObjs::objs(int index) const {
  // @@protoc_insertion_point(field_get:model.GenericObjs.Objs)
  return objs_.Get(index);
}
::model::GenericObj* GenericObjs::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:model.GenericObjs.Objs)
  return objs_.Mutable(index);
}
::model::GenericObj* GenericObjs::add_objs() {
  // @@protoc_insertion_point(field_add:model.GenericObjs.Objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::model::GenericObj >*
GenericObjs::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:model.GenericObjs.Objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::model::GenericObj >&
GenericObjs::objs() const {
  // @@protoc_insertion_point(field_list:model.GenericObjs.Objs)
  return objs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertResp::kStatusFieldNumber;
const int InsertResp::kMsgFieldNumber;
const int InsertResp::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertResp::InsertResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:model.InsertResp)
}

void InsertResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InsertResp::InsertResp(const InsertResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:model.InsertResp)
}

void InsertResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InsertResp::~InsertResp() {
  // @@protoc_insertion_point(destructor:model.InsertResp)
  SharedDtor();
}

void InsertResp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InsertResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertResp_descriptor_;
}

const InsertResp& InsertResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataservice_2eproto();
  return *default_instance_;
}

InsertResp* InsertResp::default_instance_ = NULL;

InsertResp* InsertResp::New(::google::protobuf::Arena* arena) const {
  InsertResp* n = new InsertResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertResp::Clear() {
// @@protoc_insertion_point(message_clear_start:model.InsertResp)
  status_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InsertResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:model.InsertResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .model.ApiStatus Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::model::ApiStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Msg;
        break;
      }

      // optional string Msg = 2;
      case 2: {
        if (tag == 18) {
         parse_Msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.InsertResp.Msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // optional string Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "model.InsertResp.Data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:model.InsertResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:model.InsertResp)
  return false;
#undef DO_
}

void InsertResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:model.InsertResp)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.InsertResp.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.InsertResp.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:model.InsertResp)
}

::google::protobuf::uint8* InsertResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:model.InsertResp)
  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.InsertResp.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "model.InsertResp.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:model.InsertResp)
  return target;
}

int InsertResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:model.InsertResp)
  int total_size = 0;

  // optional .model.ApiStatus Status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional string Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:model.InsertResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InsertResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:model.InsertResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:model.InsertResp)
    MergeFrom(*source);
  }
}

void InsertResp::MergeFrom(const InsertResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:model.InsertResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void InsertResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:model.InsertResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertResp::CopyFrom(const InsertResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:model.InsertResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertResp::IsInitialized() const {

  return true;
}

void InsertResp::Swap(InsertResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertResp::InternalSwap(InsertResp* other) {
  std::swap(status_, other->status_);
  msg_.Swap(&other->msg_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertResp_descriptor_;
  metadata.reflection = InsertResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertResp

// optional .model.ApiStatus Status = 1;
void InsertResp::clear_status() {
  status_ = 0;
}
 ::model::ApiStatus InsertResp::status() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Status)
  return static_cast< ::model::ApiStatus >(status_);
}
 void InsertResp::set_status(::model::ApiStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:model.InsertResp.Status)
}

// optional string Msg = 2;
void InsertResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertResp::msg() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.InsertResp.Msg)
}
 void InsertResp::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.InsertResp.Msg)
}
 void InsertResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.InsertResp.Msg)
}
 ::std::string* InsertResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:model.InsertResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertResp::release_msg() {
  // @@protoc_insertion_point(field_release:model.InsertResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:model.InsertResp.Msg)
}

// optional string Data = 3;
void InsertResp::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertResp::data() const {
  // @@protoc_insertion_point(field_get:model.InsertResp.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertResp::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.InsertResp.Data)
}
 void InsertResp::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.InsertResp.Data)
}
 void InsertResp::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.InsertResp.Data)
}
 ::std::string* InsertResp::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:model.InsertResp.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertResp::release_data() {
  // @@protoc_insertion_point(field_release:model.InsertResp.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertResp::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:model.InsertResp.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model

// @@protoc_insertion_point(global_scope)
