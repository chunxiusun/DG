# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: skynet.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import localcommon_pb2 as localcommon__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='skynet.proto',
  package='dg.model',
  syntax='proto3',
  serialized_pb=_b('\n\x0cskynet.proto\x12\x08\x64g.model\x1a\x0c\x63ommon.proto\x1a\x11localcommon.proto\"k\n\rSkynetRequest\x12/\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1e.dg.model.SkynetRequestContext\x12)\n\x04\x44\x61ta\x18\x02 \x01(\x0b\x32\x1b.dg.model.SkynetRequestData\"n\n\x0eSkynetResponse\x12\x30\n\x07\x43ontext\x18\x01 \x01(\x0b\x32\x1f.dg.model.SkynetResponseContext\x12*\n\x04\x44\x61ta\x18\x02 \x01(\x0b\x32\x1c.dg.model.SkynetResponseData\"\xe5\x01\n\x14SkynetRequestContext\x12\x11\n\tSessionId\x18\x01 \x01(\t\x12%\n\x04Type\x18\x02 \x01(\x0e\x32\x17.dg.model.RecognizeType\x12(\n\x07Storage\x18\x03 \x01(\x0b\x32\x17.dg.model.StorageConfig\x12:\n\x06Params\x18\x04 \x03(\x0b\x32*.dg.model.SkynetRequestContext.ParamsEntry\x1a-\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x01\n\x0cSkynetOutput\x12\x0f\n\x07\x41\x64\x64ress\x18\x01 \x01(\t\x12\x0c\n\x04Type\x18\x02 \x01(\t\x12\x0f\n\x07\x42itrate\x18\x03 \x01(\x05\x12\x0b\n\x03\x46ps\x18\x04 \x01(\x05\x12\r\n\x05Width\x18\x05 \x01(\x05\x12\x0e\n\x06Height\x18\x06 \x01(\x05\x12\x13\n\x0bShotHotspot\x18\x07 \x01(\x08\x12\x11\n\tSnapWidth\x18\x08 \x01(\x05\"\xae\x02\n\x11SkynetRequestData\x12\x10\n\x08SensorId\x18\x01 \x01(\x05\x12\x12\n\nSensorName\x18\x02 \x01(\t\x12\x11\n\tSensorURI\x18\x03 \x01(\t\x12\x12\n\nSensorType\x18\x04 \x01(\t\x12\r\n\x05Width\x18\x05 \x01(\x05\x12\x0e\n\x06Height\x18\x06 \x01(\x05\x12\x0b\n\x03\x46ps\x18\x07 \x01(\x05\x12$\n\x08Hotspots\x18\x08 \x03(\x0b\x32\x12.dg.model.Cutboard\x12(\n\x0c\x44isableAreas\x18\t \x03(\x0b\x32\x12.dg.model.Cutboard\x12\r\n\x05\x44\x65\x65pV\x18\n \x01(\t\x12\x14\n\x0cResultOutput\x18\x0b \x01(\t\x12+\n\x0bVideoOutput\x18\x0c \x01(\x0b\x32\x16.dg.model.SkynetOutput\"\x17\n\x15SkynetResponseContext\"\x14\n\x12SkynetResponseData2V\n\rSkynetService\x12\x45\n\x0eVideoRecognize\x12\x17.dg.model.SkynetRequest\x1a\x18.dg.model.SkynetResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,localcommon__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SKYNETREQUEST = _descriptor.Descriptor(
  name='SkynetRequest',
  full_name='dg.model.SkynetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.SkynetRequest.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Data', full_name='dg.model.SkynetRequest.Data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=166,
)


_SKYNETRESPONSE = _descriptor.Descriptor(
  name='SkynetResponse',
  full_name='dg.model.SkynetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Context', full_name='dg.model.SkynetResponse.Context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Data', full_name='dg.model.SkynetResponse.Data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=278,
)


_SKYNETREQUESTCONTEXT_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='dg.model.SkynetRequestContext.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='dg.model.SkynetRequestContext.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='dg.model.SkynetRequestContext.ParamsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=465,
  serialized_end=510,
)

_SKYNETREQUESTCONTEXT = _descriptor.Descriptor(
  name='SkynetRequestContext',
  full_name='dg.model.SkynetRequestContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SessionId', full_name='dg.model.SkynetRequestContext.SessionId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='dg.model.SkynetRequestContext.Type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Storage', full_name='dg.model.SkynetRequestContext.Storage', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Params', full_name='dg.model.SkynetRequestContext.Params', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SKYNETREQUESTCONTEXT_PARAMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=281,
  serialized_end=510,
)


_SKYNETOUTPUT = _descriptor.Descriptor(
  name='SkynetOutput',
  full_name='dg.model.SkynetOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Address', full_name='dg.model.SkynetOutput.Address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='dg.model.SkynetOutput.Type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Bitrate', full_name='dg.model.SkynetOutput.Bitrate', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Fps', full_name='dg.model.SkynetOutput.Fps', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Width', full_name='dg.model.SkynetOutput.Width', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Height', full_name='dg.model.SkynetOutput.Height', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ShotHotspot', full_name='dg.model.SkynetOutput.ShotHotspot', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SnapWidth', full_name='dg.model.SkynetOutput.SnapWidth', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=513,
  serialized_end=659,
)


_SKYNETREQUESTDATA = _descriptor.Descriptor(
  name='SkynetRequestData',
  full_name='dg.model.SkynetRequestData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SensorId', full_name='dg.model.SkynetRequestData.SensorId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SensorName', full_name='dg.model.SkynetRequestData.SensorName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SensorURI', full_name='dg.model.SkynetRequestData.SensorURI', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SensorType', full_name='dg.model.SkynetRequestData.SensorType', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Width', full_name='dg.model.SkynetRequestData.Width', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Height', full_name='dg.model.SkynetRequestData.Height', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Fps', full_name='dg.model.SkynetRequestData.Fps', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Hotspots', full_name='dg.model.SkynetRequestData.Hotspots', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DisableAreas', full_name='dg.model.SkynetRequestData.DisableAreas', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DeepV', full_name='dg.model.SkynetRequestData.DeepV', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ResultOutput', full_name='dg.model.SkynetRequestData.ResultOutput', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='VideoOutput', full_name='dg.model.SkynetRequestData.VideoOutput', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=662,
  serialized_end=964,
)


_SKYNETRESPONSECONTEXT = _descriptor.Descriptor(
  name='SkynetResponseContext',
  full_name='dg.model.SkynetResponseContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=966,
  serialized_end=989,
)


_SKYNETRESPONSEDATA = _descriptor.Descriptor(
  name='SkynetResponseData',
  full_name='dg.model.SkynetResponseData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=991,
  serialized_end=1011,
)

_SKYNETREQUEST.fields_by_name['Context'].message_type = _SKYNETREQUESTCONTEXT
_SKYNETREQUEST.fields_by_name['Data'].message_type = _SKYNETREQUESTDATA
_SKYNETRESPONSE.fields_by_name['Context'].message_type = _SKYNETRESPONSECONTEXT
_SKYNETRESPONSE.fields_by_name['Data'].message_type = _SKYNETRESPONSEDATA
_SKYNETREQUESTCONTEXT_PARAMSENTRY.containing_type = _SKYNETREQUESTCONTEXT
_SKYNETREQUESTCONTEXT.fields_by_name['Type'].enum_type = localcommon__pb2._RECOGNIZETYPE
_SKYNETREQUESTCONTEXT.fields_by_name['Storage'].message_type = common__pb2._STORAGECONFIG
_SKYNETREQUESTCONTEXT.fields_by_name['Params'].message_type = _SKYNETREQUESTCONTEXT_PARAMSENTRY
_SKYNETREQUESTDATA.fields_by_name['Hotspots'].message_type = common__pb2._CUTBOARD
_SKYNETREQUESTDATA.fields_by_name['DisableAreas'].message_type = common__pb2._CUTBOARD
_SKYNETREQUESTDATA.fields_by_name['VideoOutput'].message_type = _SKYNETOUTPUT
DESCRIPTOR.message_types_by_name['SkynetRequest'] = _SKYNETREQUEST
DESCRIPTOR.message_types_by_name['SkynetResponse'] = _SKYNETRESPONSE
DESCRIPTOR.message_types_by_name['SkynetRequestContext'] = _SKYNETREQUESTCONTEXT
DESCRIPTOR.message_types_by_name['SkynetOutput'] = _SKYNETOUTPUT
DESCRIPTOR.message_types_by_name['SkynetRequestData'] = _SKYNETREQUESTDATA
DESCRIPTOR.message_types_by_name['SkynetResponseContext'] = _SKYNETRESPONSECONTEXT
DESCRIPTOR.message_types_by_name['SkynetResponseData'] = _SKYNETRESPONSEDATA

SkynetRequest = _reflection.GeneratedProtocolMessageType('SkynetRequest', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETREQUEST,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetRequest)
  ))
_sym_db.RegisterMessage(SkynetRequest)

SkynetResponse = _reflection.GeneratedProtocolMessageType('SkynetResponse', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETRESPONSE,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetResponse)
  ))
_sym_db.RegisterMessage(SkynetResponse)

SkynetRequestContext = _reflection.GeneratedProtocolMessageType('SkynetRequestContext', (_message.Message,), dict(

  ParamsEntry = _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), dict(
    DESCRIPTOR = _SKYNETREQUESTCONTEXT_PARAMSENTRY,
    __module__ = 'skynet_pb2'
    # @@protoc_insertion_point(class_scope:dg.model.SkynetRequestContext.ParamsEntry)
    ))
  ,
  DESCRIPTOR = _SKYNETREQUESTCONTEXT,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetRequestContext)
  ))
_sym_db.RegisterMessage(SkynetRequestContext)
_sym_db.RegisterMessage(SkynetRequestContext.ParamsEntry)

SkynetOutput = _reflection.GeneratedProtocolMessageType('SkynetOutput', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETOUTPUT,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetOutput)
  ))
_sym_db.RegisterMessage(SkynetOutput)

SkynetRequestData = _reflection.GeneratedProtocolMessageType('SkynetRequestData', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETREQUESTDATA,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetRequestData)
  ))
_sym_db.RegisterMessage(SkynetRequestData)

SkynetResponseContext = _reflection.GeneratedProtocolMessageType('SkynetResponseContext', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETRESPONSECONTEXT,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetResponseContext)
  ))
_sym_db.RegisterMessage(SkynetResponseContext)

SkynetResponseData = _reflection.GeneratedProtocolMessageType('SkynetResponseData', (_message.Message,), dict(
  DESCRIPTOR = _SKYNETRESPONSEDATA,
  __module__ = 'skynet_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SkynetResponseData)
  ))
_sym_db.RegisterMessage(SkynetResponseData)


_SKYNETREQUESTCONTEXT_PARAMSENTRY.has_options = True
_SKYNETREQUESTCONTEXT_PARAMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SkynetServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.VideoRecognize = channel.unary_unary(
        '/dg.model.SkynetService/VideoRecognize',
        request_serializer=SkynetRequest.SerializeToString,
        response_deserializer=SkynetResponse.FromString,
        )


class SkynetServiceServicer(object):

  def VideoRecognize(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SkynetServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'VideoRecognize': grpc.unary_unary_rpc_method_handler(
          servicer.VideoRecognize,
          request_deserializer=SkynetRequest.FromString,
          response_serializer=SkynetResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dg.model.SkynetService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSkynetServiceServicer(object):
  def VideoRecognize(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSkynetServiceStub(object):
  def VideoRecognize(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  VideoRecognize.future = None


def beta_create_SkynetService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('dg.model.SkynetService', 'VideoRecognize'): SkynetRequest.FromString,
  }
  response_serializers = {
    ('dg.model.SkynetService', 'VideoRecognize'): SkynetResponse.SerializeToString,
  }
  method_implementations = {
    ('dg.model.SkynetService', 'VideoRecognize'): face_utilities.unary_unary_inline(servicer.VideoRecognize),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SkynetService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('dg.model.SkynetService', 'VideoRecognize'): SkynetRequest.SerializeToString,
  }
  response_deserializers = {
    ('dg.model.SkynetService', 'VideoRecognize'): SkynetResponse.FromString,
  }
  cardinalities = {
    'VideoRecognize': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'dg.model.SkynetService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
