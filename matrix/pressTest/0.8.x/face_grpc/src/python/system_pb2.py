# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: system.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import localcommon_pb2 as localcommon__pb2
import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='system.proto',
  package='dg.model',
  syntax='proto3',
  serialized_pb=_b('\n\x0csystem.proto\x12\x08\x64g.model\x1a\x11localcommon.proto\x1a\x0c\x63ommon.proto\"\r\n\x0bPingRequest\"\x1f\n\x0cPingResponse\x12\x0f\n\x07Message\x18\x01 \x01(\t\"\x15\n\x13SystemStatusRequest\"\x8d\x02\n\x14SystemStatusResponse\x12\x10\n\x08ModelVer\x18\x01 \x01(\t\x12\x11\n\tEngineVer\x18\x02 \x01(\t\x12\x12\n\nServiceVer\x18\x03 \x01(\t\x12\x10\n\x08\x43puUsage\x18\x04 \x01(\t\x12\x10\n\x08\x41vailMem\x18\x05 \x01(\t\x12\x10\n\x08TotalMem\x18\x06 \x01(\t\x12\x11\n\tAvailDisk\x18\x07 \x01(\t\x12\x11\n\tTotalDisk\x18\x08 \x01(\t\x12\x11\n\tNetIOSend\x18\t \x01(\t\x12\x11\n\tNetIORecv\x18\n \x01(\t\x12\x10\n\x08GpuUsage\x18\x0b \x01(\t\x12\x13\n\x0bGpuAvailMem\x18\x0c \x01(\t\x12\x13\n\x0bGpuTotalMem\x18\r \x01(\t\"\xc2\x02\n\x18InstanceConfigureRequest\x12\x32\n\x0fRecImageVConfig\x18\x01 \x01(\x0b\x32\x19.dg.model.RecImageVConfig\x12\x32\n\x0fRecImageFConfig\x18\x02 \x01(\x0b\x32\x19.dg.model.RecImageFConfig\x12\x32\n\x0fRecVideoVConfig\x18\x03 \x01(\x0b\x32\x19.dg.model.RecVideoVConfig\x12\x32\n\x0fRecVideoFConfig\x18\x04 \x01(\x0b\x32\x19.dg.model.RecVideoFConfig\x12*\n\x0bRankVConfig\x18\x05 \x01(\x0b\x32\x15.dg.model.RankVConfig\x12*\n\x0bRankFConfig\x18\x06 \x01(\x0b\x32\x15.dg.model.RankFConfig\"\x15\n\x13GetInstancesRequest\"e\n\x19InstanceConfigureResponse\x12\x0e\n\x06Status\x18\x01 \x01(\t\x12\x0f\n\x07Message\x18\x02 \x01(\t\x12\'\n\x07Results\x18\x03 \x03(\x0b\x32\x16.dg.model.EngineStatus\"\xa6\x01\n\x0eInstanceConfig\x12$\n\x04Type\x18\x01 \x01(\x0e\x32\x16.dg.model.InstanceType\x12\r\n\x05\x43ount\x18\x02 \x01(\x05\x12/\n\tFunctions\x18\x03 \x03(\x0e\x32\x1c.dg.model.RecognizeFunctions\x12.\n\rStorageConfig\x18\x04 \x01(\x0b\x32\x17.dg.model.StorageConfig\">\n\x0fRecImageVConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\">\n\x0fRecImageFConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\"\xa0\x01\n\x0fRecVideoVConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\x12\x12\n\nBufferSize\x18\x02 \x01(\x05\x12\x16\n\x0e\x44\x65tectInterval\x18\x03 \x01(\x05\x12\x18\n\x10\x43lassifyInterval\x18\x04 \x01(\x05\x12\x1a\n\x12\x43lassifyBufferSize\x18\x05 \x01(\x05\"\x96\x01\n\x0fRecVideoFConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\x12\x12\n\nBufferSize\x18\x02 \x01(\x05\x12\x17\n\x0f\x44\x65tectThreshold\x18\x03 \x01(\x02\x12\x13\n\x0b\x44\x65tectWidth\x18\x04 \x01(\x05\x12\x14\n\x0c\x44\x65tectHeight\x18\x05 \x01(\x05\":\n\x0bRankVConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\":\n\x0bRankFConfig\x12+\n\tInstances\x18\x01 \x01(\x0b\x32\x18.dg.model.InstanceConfig\"3\n\x0c\x45ngineStatus\x12\x11\n\tInstances\x18\x01 \x01(\x05\x12\x10\n\x08RpcPorts\x18\x02 \x03(\x05*\xaf\x01\n\x0cInstanceType\x12\x1a\n\x16\x43\x46G_TYPE_VEHICLE_IMAGE\x10\x00\x12\x1a\n\x16\x43\x46G_TYPE_VEHICLE_VIDEO\x10\x01\x12\x1b\n\x17\x43\x46G_TYPE_VEHICLE_RANKER\x10\x02\x12\x17\n\x13\x43\x46G_TYPE_FACE_IMAGE\x10\x03\x12\x17\n\x13\x43\x46G_TYPE_FACE_VIDEO\x10\x04\x12\x18\n\x14\x43\x46G_TYPE_FACE_RANKER\x10\x05\x32\xca\x02\n\rSystemService\x12\x37\n\x04Ping\x12\x15.dg.model.PingRequest\x1a\x16.dg.model.PingResponse\"\x00\x12O\n\x0cSystemStatus\x12\x1d.dg.model.SystemStatusRequest\x1a\x1e.dg.model.SystemStatusResponse\"\x00\x12T\n\x0cGetInstances\x12\x1d.dg.model.GetInstancesRequest\x1a#.dg.model.InstanceConfigureResponse\"\x00\x12Y\n\x0c\x43onfigEngine\x12\".dg.model.InstanceConfigureRequest\x1a#.dg.model.InstanceConfigureResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[localcommon__pb2.DESCRIPTOR,common__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_INSTANCETYPE = _descriptor.EnumDescriptor(
  name='InstanceType',
  full_name='dg.model.InstanceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_VEHICLE_IMAGE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_VEHICLE_VIDEO', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_VEHICLE_RANKER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_FACE_IMAGE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_FACE_VIDEO', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CFG_TYPE_FACE_RANKER', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1640,
  serialized_end=1815,
)
_sym_db.RegisterEnumDescriptor(_INSTANCETYPE)

InstanceType = enum_type_wrapper.EnumTypeWrapper(_INSTANCETYPE)
CFG_TYPE_VEHICLE_IMAGE = 0
CFG_TYPE_VEHICLE_VIDEO = 1
CFG_TYPE_VEHICLE_RANKER = 2
CFG_TYPE_FACE_IMAGE = 3
CFG_TYPE_FACE_VIDEO = 4
CFG_TYPE_FACE_RANKER = 5



_PINGREQUEST = _descriptor.Descriptor(
  name='PingRequest',
  full_name='dg.model.PingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=72,
)


_PINGRESPONSE = _descriptor.Descriptor(
  name='PingResponse',
  full_name='dg.model.PingResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Message', full_name='dg.model.PingResponse.Message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=105,
)


_SYSTEMSTATUSREQUEST = _descriptor.Descriptor(
  name='SystemStatusRequest',
  full_name='dg.model.SystemStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=107,
  serialized_end=128,
)


_SYSTEMSTATUSRESPONSE = _descriptor.Descriptor(
  name='SystemStatusResponse',
  full_name='dg.model.SystemStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ModelVer', full_name='dg.model.SystemStatusResponse.ModelVer', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EngineVer', full_name='dg.model.SystemStatusResponse.EngineVer', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ServiceVer', full_name='dg.model.SystemStatusResponse.ServiceVer', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CpuUsage', full_name='dg.model.SystemStatusResponse.CpuUsage', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AvailMem', full_name='dg.model.SystemStatusResponse.AvailMem', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TotalMem', full_name='dg.model.SystemStatusResponse.TotalMem', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AvailDisk', full_name='dg.model.SystemStatusResponse.AvailDisk', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='TotalDisk', full_name='dg.model.SystemStatusResponse.TotalDisk', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NetIOSend', full_name='dg.model.SystemStatusResponse.NetIOSend', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NetIORecv', full_name='dg.model.SystemStatusResponse.NetIORecv', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GpuUsage', full_name='dg.model.SystemStatusResponse.GpuUsage', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GpuAvailMem', full_name='dg.model.SystemStatusResponse.GpuAvailMem', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GpuTotalMem', full_name='dg.model.SystemStatusResponse.GpuTotalMem', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=400,
)


_INSTANCECONFIGUREREQUEST = _descriptor.Descriptor(
  name='InstanceConfigureRequest',
  full_name='dg.model.InstanceConfigureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='RecImageVConfig', full_name='dg.model.InstanceConfigureRequest.RecImageVConfig', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RecImageFConfig', full_name='dg.model.InstanceConfigureRequest.RecImageFConfig', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RecVideoVConfig', full_name='dg.model.InstanceConfigureRequest.RecVideoVConfig', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RecVideoFConfig', full_name='dg.model.InstanceConfigureRequest.RecVideoFConfig', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RankVConfig', full_name='dg.model.InstanceConfigureRequest.RankVConfig', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RankFConfig', full_name='dg.model.InstanceConfigureRequest.RankFConfig', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=403,
  serialized_end=725,
)


_GETINSTANCESREQUEST = _descriptor.Descriptor(
  name='GetInstancesRequest',
  full_name='dg.model.GetInstancesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=748,
)


_INSTANCECONFIGURERESPONSE = _descriptor.Descriptor(
  name='InstanceConfigureResponse',
  full_name='dg.model.InstanceConfigureResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Status', full_name='dg.model.InstanceConfigureResponse.Status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Message', full_name='dg.model.InstanceConfigureResponse.Message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Results', full_name='dg.model.InstanceConfigureResponse.Results', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=851,
)


_INSTANCECONFIG = _descriptor.Descriptor(
  name='InstanceConfig',
  full_name='dg.model.InstanceConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Type', full_name='dg.model.InstanceConfig.Type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Count', full_name='dg.model.InstanceConfig.Count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Functions', full_name='dg.model.InstanceConfig.Functions', index=2,
      number=3, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='StorageConfig', full_name='dg.model.InstanceConfig.StorageConfig', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=854,
  serialized_end=1020,
)


_RECIMAGEVCONFIG = _descriptor.Descriptor(
  name='RecImageVConfig',
  full_name='dg.model.RecImageVConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RecImageVConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1022,
  serialized_end=1084,
)


_RECIMAGEFCONFIG = _descriptor.Descriptor(
  name='RecImageFConfig',
  full_name='dg.model.RecImageFConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RecImageFConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1086,
  serialized_end=1148,
)


_RECVIDEOVCONFIG = _descriptor.Descriptor(
  name='RecVideoVConfig',
  full_name='dg.model.RecVideoVConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RecVideoVConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BufferSize', full_name='dg.model.RecVideoVConfig.BufferSize', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DetectInterval', full_name='dg.model.RecVideoVConfig.DetectInterval', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ClassifyInterval', full_name='dg.model.RecVideoVConfig.ClassifyInterval', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ClassifyBufferSize', full_name='dg.model.RecVideoVConfig.ClassifyBufferSize', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1151,
  serialized_end=1311,
)


_RECVIDEOFCONFIG = _descriptor.Descriptor(
  name='RecVideoFConfig',
  full_name='dg.model.RecVideoFConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RecVideoFConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BufferSize', full_name='dg.model.RecVideoFConfig.BufferSize', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DetectThreshold', full_name='dg.model.RecVideoFConfig.DetectThreshold', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DetectWidth', full_name='dg.model.RecVideoFConfig.DetectWidth', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DetectHeight', full_name='dg.model.RecVideoFConfig.DetectHeight', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1314,
  serialized_end=1464,
)


_RANKVCONFIG = _descriptor.Descriptor(
  name='RankVConfig',
  full_name='dg.model.RankVConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RankVConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1466,
  serialized_end=1524,
)


_RANKFCONFIG = _descriptor.Descriptor(
  name='RankFConfig',
  full_name='dg.model.RankFConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.RankFConfig.Instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1526,
  serialized_end=1584,
)


_ENGINESTATUS = _descriptor.Descriptor(
  name='EngineStatus',
  full_name='dg.model.EngineStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Instances', full_name='dg.model.EngineStatus.Instances', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RpcPorts', full_name='dg.model.EngineStatus.RpcPorts', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1586,
  serialized_end=1637,
)

_INSTANCECONFIGUREREQUEST.fields_by_name['RecImageVConfig'].message_type = _RECIMAGEVCONFIG
_INSTANCECONFIGUREREQUEST.fields_by_name['RecImageFConfig'].message_type = _RECIMAGEFCONFIG
_INSTANCECONFIGUREREQUEST.fields_by_name['RecVideoVConfig'].message_type = _RECVIDEOVCONFIG
_INSTANCECONFIGUREREQUEST.fields_by_name['RecVideoFConfig'].message_type = _RECVIDEOFCONFIG
_INSTANCECONFIGUREREQUEST.fields_by_name['RankVConfig'].message_type = _RANKVCONFIG
_INSTANCECONFIGUREREQUEST.fields_by_name['RankFConfig'].message_type = _RANKFCONFIG
_INSTANCECONFIGURERESPONSE.fields_by_name['Results'].message_type = _ENGINESTATUS
_INSTANCECONFIG.fields_by_name['Type'].enum_type = _INSTANCETYPE
_INSTANCECONFIG.fields_by_name['Functions'].enum_type = localcommon__pb2._RECOGNIZEFUNCTIONS
_INSTANCECONFIG.fields_by_name['StorageConfig'].message_type = common__pb2._STORAGECONFIG
_RECIMAGEVCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
_RECIMAGEFCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
_RECVIDEOVCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
_RECVIDEOFCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
_RANKVCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
_RANKFCONFIG.fields_by_name['Instances'].message_type = _INSTANCECONFIG
DESCRIPTOR.message_types_by_name['PingRequest'] = _PINGREQUEST
DESCRIPTOR.message_types_by_name['PingResponse'] = _PINGRESPONSE
DESCRIPTOR.message_types_by_name['SystemStatusRequest'] = _SYSTEMSTATUSREQUEST
DESCRIPTOR.message_types_by_name['SystemStatusResponse'] = _SYSTEMSTATUSRESPONSE
DESCRIPTOR.message_types_by_name['InstanceConfigureRequest'] = _INSTANCECONFIGUREREQUEST
DESCRIPTOR.message_types_by_name['GetInstancesRequest'] = _GETINSTANCESREQUEST
DESCRIPTOR.message_types_by_name['InstanceConfigureResponse'] = _INSTANCECONFIGURERESPONSE
DESCRIPTOR.message_types_by_name['InstanceConfig'] = _INSTANCECONFIG
DESCRIPTOR.message_types_by_name['RecImageVConfig'] = _RECIMAGEVCONFIG
DESCRIPTOR.message_types_by_name['RecImageFConfig'] = _RECIMAGEFCONFIG
DESCRIPTOR.message_types_by_name['RecVideoVConfig'] = _RECVIDEOVCONFIG
DESCRIPTOR.message_types_by_name['RecVideoFConfig'] = _RECVIDEOFCONFIG
DESCRIPTOR.message_types_by_name['RankVConfig'] = _RANKVCONFIG
DESCRIPTOR.message_types_by_name['RankFConfig'] = _RANKFCONFIG
DESCRIPTOR.message_types_by_name['EngineStatus'] = _ENGINESTATUS
DESCRIPTOR.enum_types_by_name['InstanceType'] = _INSTANCETYPE

PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), dict(
  DESCRIPTOR = _PINGREQUEST,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.PingRequest)
  ))
_sym_db.RegisterMessage(PingRequest)

PingResponse = _reflection.GeneratedProtocolMessageType('PingResponse', (_message.Message,), dict(
  DESCRIPTOR = _PINGRESPONSE,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.PingResponse)
  ))
_sym_db.RegisterMessage(PingResponse)

SystemStatusRequest = _reflection.GeneratedProtocolMessageType('SystemStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _SYSTEMSTATUSREQUEST,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SystemStatusRequest)
  ))
_sym_db.RegisterMessage(SystemStatusRequest)

SystemStatusResponse = _reflection.GeneratedProtocolMessageType('SystemStatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _SYSTEMSTATUSRESPONSE,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.SystemStatusResponse)
  ))
_sym_db.RegisterMessage(SystemStatusResponse)

InstanceConfigureRequest = _reflection.GeneratedProtocolMessageType('InstanceConfigureRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSTANCECONFIGUREREQUEST,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.InstanceConfigureRequest)
  ))
_sym_db.RegisterMessage(InstanceConfigureRequest)

GetInstancesRequest = _reflection.GeneratedProtocolMessageType('GetInstancesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETINSTANCESREQUEST,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.GetInstancesRequest)
  ))
_sym_db.RegisterMessage(GetInstancesRequest)

InstanceConfigureResponse = _reflection.GeneratedProtocolMessageType('InstanceConfigureResponse', (_message.Message,), dict(
  DESCRIPTOR = _INSTANCECONFIGURERESPONSE,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.InstanceConfigureResponse)
  ))
_sym_db.RegisterMessage(InstanceConfigureResponse)

InstanceConfig = _reflection.GeneratedProtocolMessageType('InstanceConfig', (_message.Message,), dict(
  DESCRIPTOR = _INSTANCECONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.InstanceConfig)
  ))
_sym_db.RegisterMessage(InstanceConfig)

RecImageVConfig = _reflection.GeneratedProtocolMessageType('RecImageVConfig', (_message.Message,), dict(
  DESCRIPTOR = _RECIMAGEVCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RecImageVConfig)
  ))
_sym_db.RegisterMessage(RecImageVConfig)

RecImageFConfig = _reflection.GeneratedProtocolMessageType('RecImageFConfig', (_message.Message,), dict(
  DESCRIPTOR = _RECIMAGEFCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RecImageFConfig)
  ))
_sym_db.RegisterMessage(RecImageFConfig)

RecVideoVConfig = _reflection.GeneratedProtocolMessageType('RecVideoVConfig', (_message.Message,), dict(
  DESCRIPTOR = _RECVIDEOVCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RecVideoVConfig)
  ))
_sym_db.RegisterMessage(RecVideoVConfig)

RecVideoFConfig = _reflection.GeneratedProtocolMessageType('RecVideoFConfig', (_message.Message,), dict(
  DESCRIPTOR = _RECVIDEOFCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RecVideoFConfig)
  ))
_sym_db.RegisterMessage(RecVideoFConfig)

RankVConfig = _reflection.GeneratedProtocolMessageType('RankVConfig', (_message.Message,), dict(
  DESCRIPTOR = _RANKVCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankVConfig)
  ))
_sym_db.RegisterMessage(RankVConfig)

RankFConfig = _reflection.GeneratedProtocolMessageType('RankFConfig', (_message.Message,), dict(
  DESCRIPTOR = _RANKFCONFIG,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.RankFConfig)
  ))
_sym_db.RegisterMessage(RankFConfig)

EngineStatus = _reflection.GeneratedProtocolMessageType('EngineStatus', (_message.Message,), dict(
  DESCRIPTOR = _ENGINESTATUS,
  __module__ = 'system_pb2'
  # @@protoc_insertion_point(class_scope:dg.model.EngineStatus)
  ))
_sym_db.RegisterMessage(EngineStatus)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SystemServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/dg.model.SystemService/Ping',
        request_serializer=PingRequest.SerializeToString,
        response_deserializer=PingResponse.FromString,
        )
    self.SystemStatus = channel.unary_unary(
        '/dg.model.SystemService/SystemStatus',
        request_serializer=SystemStatusRequest.SerializeToString,
        response_deserializer=SystemStatusResponse.FromString,
        )
    self.GetInstances = channel.unary_unary(
        '/dg.model.SystemService/GetInstances',
        request_serializer=GetInstancesRequest.SerializeToString,
        response_deserializer=InstanceConfigureResponse.FromString,
        )
    self.ConfigEngine = channel.unary_unary(
        '/dg.model.SystemService/ConfigEngine',
        request_serializer=InstanceConfigureRequest.SerializeToString,
        response_deserializer=InstanceConfigureResponse.FromString,
        )


class SystemServiceServicer(object):

  def Ping(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SystemStatus(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInstances(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConfigEngine(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SystemServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=PingRequest.FromString,
          response_serializer=PingResponse.SerializeToString,
      ),
      'SystemStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SystemStatus,
          request_deserializer=SystemStatusRequest.FromString,
          response_serializer=SystemStatusResponse.SerializeToString,
      ),
      'GetInstances': grpc.unary_unary_rpc_method_handler(
          servicer.GetInstances,
          request_deserializer=GetInstancesRequest.FromString,
          response_serializer=InstanceConfigureResponse.SerializeToString,
      ),
      'ConfigEngine': grpc.unary_unary_rpc_method_handler(
          servicer.ConfigEngine,
          request_deserializer=InstanceConfigureRequest.FromString,
          response_serializer=InstanceConfigureResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dg.model.SystemService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSystemServiceServicer(object):
  def Ping(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SystemStatus(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetInstances(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ConfigEngine(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSystemServiceStub(object):
  def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Ping.future = None
  def SystemStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SystemStatus.future = None
  def GetInstances(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetInstances.future = None
  def ConfigEngine(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  ConfigEngine.future = None


def beta_create_SystemService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('dg.model.SystemService', 'ConfigEngine'): InstanceConfigureRequest.FromString,
    ('dg.model.SystemService', 'GetInstances'): GetInstancesRequest.FromString,
    ('dg.model.SystemService', 'Ping'): PingRequest.FromString,
    ('dg.model.SystemService', 'SystemStatus'): SystemStatusRequest.FromString,
  }
  response_serializers = {
    ('dg.model.SystemService', 'ConfigEngine'): InstanceConfigureResponse.SerializeToString,
    ('dg.model.SystemService', 'GetInstances'): InstanceConfigureResponse.SerializeToString,
    ('dg.model.SystemService', 'Ping'): PingResponse.SerializeToString,
    ('dg.model.SystemService', 'SystemStatus'): SystemStatusResponse.SerializeToString,
  }
  method_implementations = {
    ('dg.model.SystemService', 'ConfigEngine'): face_utilities.unary_unary_inline(servicer.ConfigEngine),
    ('dg.model.SystemService', 'GetInstances'): face_utilities.unary_unary_inline(servicer.GetInstances),
    ('dg.model.SystemService', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    ('dg.model.SystemService', 'SystemStatus'): face_utilities.unary_unary_inline(servicer.SystemStatus),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SystemService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('dg.model.SystemService', 'ConfigEngine'): InstanceConfigureRequest.SerializeToString,
    ('dg.model.SystemService', 'GetInstances'): GetInstancesRequest.SerializeToString,
    ('dg.model.SystemService', 'Ping'): PingRequest.SerializeToString,
    ('dg.model.SystemService', 'SystemStatus'): SystemStatusRequest.SerializeToString,
  }
  response_deserializers = {
    ('dg.model.SystemService', 'ConfigEngine'): InstanceConfigureResponse.FromString,
    ('dg.model.SystemService', 'GetInstances'): InstanceConfigureResponse.FromString,
    ('dg.model.SystemService', 'Ping'): PingResponse.FromString,
    ('dg.model.SystemService', 'SystemStatus'): SystemStatusResponse.FromString,
  }
  cardinalities = {
    'ConfigEngine': cardinality.Cardinality.UNARY_UNARY,
    'GetInstances': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
    'SystemStatus': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'dg.model.SystemService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
